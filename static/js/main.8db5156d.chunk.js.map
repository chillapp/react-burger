{"version":3,"sources":["reportWebVitals.ts","components/icon-button/icon-button.tsx","components/app-header/app-header.tsx","components/burger-ingredients/burger-ingredients-item/burger-ingredients-item.tsx","redux/hooks.ts","services/http.tsx","components/burger-ingredients/burger-ingredients.tsx","redux/actions/ingredients.ts","redux/consts/ingredients.ts","components/burger-constructor/burger-construcor-item/burger-constructor-item.tsx","redux/actions/constructor.ts","redux/consts/constructor.ts","components/burger-constructor/burger-construcor-bun-item/burger-constructor-bun-item.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","components/spinner/spinner.tsx","utils/common.tsx","redux/actions/user.ts","redux/consts/user.ts","components/burger-constructor/order-details/order-details.tsx","components/burger-constructor/burger-constructor.tsx","components/burger-page/burger-page.tsx","pages/login/login.tsx","pages/register/register.tsx","pages/forgot-password/forgot-password.tsx","pages/reset-password/reset-password.tsx","components/protected-route/protected-route.tsx","pages/profile/profile/profile.tsx","components/feed-order/feed-order.tsx","components/burger-ingredients/ingredient-list-item/ingredient-list-item.tsx","components/feed-order-details/feed-order-details.tsx","redux/actions/feed.ts","redux/consts/feed.ts","redux/consts/socket.ts","redux/actions/socket.ts","pages/profile/orders/orders.tsx","pages/profile/profile.tsx","pages/404/404.tsx","components/burger-ingredients/ingredient-details/ingredient-details.tsx","pages/feed/feed.tsx","components/app/app.tsx","redux/reducers/ingredients.ts","redux/reducers/constructor.ts","redux/reducers/user.ts","redux/reducers/socket.ts","redux/reducers/feed.ts","redux/reducers/index.ts","redux/store.ts","redux/middleware/socketMiddleware.ts","index.tsx","styles/common.module.css","pages/feed/feed.module.css","components/burger-constructor/burger-construcor-item/burger-constructor-item.module.css","pages/profile/profile.module.css","components/burger-ingredients/burger-ingredients-item/burger-ingredients-item.module.css","components/icon-button/icon-button.module.css","components/burger-constructor/burger-construcor-bun-item/burger-constructor-bun-item.module.css","components/burger-constructor/burger-construtor.module.css","components/spinner/spinner.module.css","components/feed-order/feed-order.module.css","pages/profile/orders/orders.module.css","components/app-header/app-header.module.css","components/burger-ingredients/burger-ingredients.module.css","components/modal/modal.module.css","components/modal-overlay/modal-overlay.module.css","components/feed-order-details/feed-order-details.module.css","components/burger-ingredients/ingredient-list-item/ingredient-list-item.module.css"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","IconButton","icon","navLink","click","children","getIcon","className","type","exact","activeClassName","styles","active","to","iconButton","onClick","AppHeader","commonStyles","panelColor","flexRow","flexJCAround","logoCentering","BurgerIngredientsItem","data","selected","useDrag","item","collect","monitor","opacity","isDragging","dragRef","history","useHistory","location","useLocation","showDetails","useCallback","replace","pathname","_id","state","background","draggable","ref","style","count","image","src","alt","price","CommonStyles","flexAICenter","name","useSelector","selectorHook","useDispatch","dispatchHook","checkResponse","response","ok","json","message","Promise","reject","status","checkSuccess","jsonData","success","resolve","getApiUrl","endpoint","getWsApiUrl","BurgerIngredients","dispatch","store","ingredients","rows","ingredientsTab","cart","burgerConstructor","tabClick","tab","elRef","ingredientsSetTab","current","scrollIntoView","behavior","bunsRef","React","useRef","bunItems","useMemo","buns","filter","flexWrap","flexJCCenter","map","cartItem","length","saucesRef","sauceItems","sauces","mainsRef","mainItems","mains","scrollEndTimeOut","scrollEndHandler","e","containerRect","target","getBoundingClientRect","values","bunsRect","bunsY","Math","abs","y","push","saucesRect","saucesY","mainsRect","mainsY","minValue","min","indexOf","content","flexColumn","flexFill","value","onScroll","event","clearTimeout","setTimeout","BurgerConstructorItem","ingredient","useDrop","accept","drop","constructorReplace","dragIngredient","dropIngredient","isHover","isOver","dropItem","getItem","dropRef","dropToTop","dropToBottom","uuid","findIndex","canDragUp","display","dragPointer","smallImage","constructorDel","canDragDown","BurgerConstructorBunItem","role","bun","itemTop","itemBottom","ModalOverlay","Styles","modalOverlay","modalRoot","document","getElementById","Modal","header","onClose","useEffect","closeByEsc","key","addEventListener","removeEventListener","ReactDOM","createPortal","modal","flexJCBetween","button","Spinner","extraClass","centered","spinner","setCookie","props","path","exp","expires","d","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","cookie","getCookie","matches","match","RegExp","decodeURIComponent","userAuthThunk","fetch","method","headers","user","catch","err","OrderDetails","order","userCreateOrderRequest","userCreateOrderFailure","body","JSON","stringify","number","userCreateOrderThunk","from","orderDetails","textCenter","BurgerConstructor","constructorAdd","dropTarget","useState","createOrder","setCreateOrder","totalPrice","bunItem","x","ingredientItems","list","visibility","flexJCRight","htmlType","BurgerPage","ingredientsRequest","ingredientsFailure","page","flexItemASCenter","DndProvider","backend","HTML5Backend","LoginPage","email","setEmail","password","setPassword","pwdType","setPwdType","loginUserCallback","login","preventDefault","stopPropagation","localStorage","setItem","refreshToken","accessToken","userAuthRequest","userLoginRequest","userLoginFailure","onSubmit","disabled","placeholder","onChange","onIconClick","textDecorationNone","RegisterPage","setName","registerUserCallback","userRegisterSuccess","userRegisterThunk","userRegisterRequest","userRegisterFailure","ForgotPasswordPage","userForgotPasswordRequest","userForgotPasswordSuccess","reqForgotPassword","userForgotPasswordThunk","ResetPasswordPage","newPwd","setNewPwd","emailCode","setEmailCode","userResetPasswordRequest","userResetPasswordFailure","userResetPasswordSuccess","resetPasswordCallback","token","ProtectedRoute","ProfileProfilePage","originalValues","pwd","userNameRef","userName","setUserName","userNameEdit","setUserNameEdit","userEmailRef","userEmail","setUserEmail","userEmailEdit","setUserEmailEdit","userPwdRef","userPwd","setUserPwd","userPwdEdit","setUserPwdEdit","canUpdate","setCanUpdate","toggleEditField","originalValue","setter","focus","saveUser","payload","cancelSave","bind","FeedOrder","feedOrder","reduce","acc","imgs","ingredientLogo","image_mobile","goToOrder","cursorPointer","contentContainer","borderRadius24","locale","calendar","createdAt","flexRowReverse","IngredientListItem","wFull","flexJCLeft","FeedOrderDetails","storeKey","orderNumber","useParams","id","feed","orderIndex","orders","parseInt","statusName","ingredientsEl","index","flexItemASStart","commonFeedUpdate","profileFeedUpdate","WS_CONNECTION_START","WS_CONNECTION_CLOSE","wsConnectionStart","wsConnectionClose","wsConnectionSuccess","wsConnectionError","wsConnectionClosed","ProfileOrdersPage","profileSocketURL","url","actions","wsGetMessage","wsConnected","socket","loading","setLoading","profileFeed","feedItems","hFull","ordersDetailsItem","overflowAuto","container","ProfilePage","userLogoutSuccess","pathParts","split","removeItem","expired","menuContent","profileMenu","profileMenuItemActive","component","Page404","IngredientDetails","ingredientId","ingredientIndex","calories","proteins","fat","carbohydrates","FeedPage","commonFeed","wsURL","ordersDone","rowHeight","ordersPending","overflowXHidden","ordersDetailsContent","ordersDetailsQueue","textShadow","total","totalToday","App","ModalSwitch","handleModalClose","ingredientsInitialState","ingredientsShowDetails","constructorInitialState","userInitialState","userAuthFailure","userForgotPasswordFailure","userLogoutRequest","userLogoutFailure","userUpdateRequest","userUpdateFailure","socketInitialState","feedInitialState","rootReducer","combineReducers","action","newCart","bunIndex","splice","uuidV4","deleteItemIndex","dragIndex","dropIndex","error","undefined","parse","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","concat","thunk","sockets","next","readyState","WebSocket","OPEN","close","connectData","onopen","onerror","onmessage","onclose","render","StrictMode","module","exports"],"mappings":"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","file":"static/js/main.8db5156d.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {FC, ReactNode} from \"react\";\nimport styles from './icon-button.module.css'\nimport {ListIcon, ProfileIcon, BurgerIcon, DeleteIcon} from '@ya.praktikum/react-developer-burger-ui-components'\nimport {NavLink} from \"react-router-dom\";\n\ninterface IIconButton {\n    icon: string\n    navLink?: string\n    click?: () => void\n    children?: ReactNode\n}\n\nexport const IconButton: FC<IIconButton> = ({ icon, navLink, click, children }) => {\n\n    const getIcon = () => {\n        switch (icon) {\n            case 'burger':\n                return <span className=\"mr-2\"><BurgerIcon type='primary'/></span>\n            case 'list':\n                return <span className=\"mr-2\"><ListIcon type='primary'/></span>\n            case 'profile':\n                return <span className=\"mr-2\"><ProfileIcon type='primary'/></span>\n            case 'delete':\n                return <span className=\"mr-2\"><DeleteIcon type='primary'/></span>\n            default: return '';\n        }\n    }\n\n    if (navLink) {\n        return (\n            <NavLink exact={navLink === '/'} activeClassName={styles.active} to={navLink} className={`${styles.iconButton} text_color_inactive`}>\n                {getIcon()}\n                <span className=\"text text_type_main-default\">{children}</span>\n            </NavLink>\n        );\n    } else {\n        return (\n            <button className={`${styles.iconButton} text_color_inactive`} onClick={click}>\n                {getIcon()}\n                <span className=\"text text_type_main-default\">{children}</span>\n            </button>\n        );\n    }\n\n\n}\n","import React from \"react\";\nimport styles from './app-header.module.css';\nimport commonStyles from '../../styles/common.module.css';\nimport {\n    Logo,\n} from '@ya.praktikum/react-developer-burger-ui-components'\nimport {IconButton} from \"../icon-button/icon-button\";\n\nexport default function AppHeader() {\n    return (\n        <header className={`p-4 ${commonStyles.panelColor} ${commonStyles.flexRow} ${commonStyles.flexJCAround}`}>\n            <div className={styles.logoCentering}>\n                <Logo />\n            </div>\n            <section className={commonStyles.flexRow}>\n                <IconButton navLink='/' icon='burger'>Конструктор</IconButton>\n                <IconButton navLink='/feed' icon='list'>Лента заказов</IconButton>\n            </section>\n            <IconButton navLink='/profile' icon='profile'>Личный кабинет</IconButton>\n        </header>\n    );\n}\n","import React, {FC, useCallback} from \"react\";\nimport {Counter, CurrencyIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport styles from './burger-ingredients-item.module.css';\nimport CommonStyles from '../../../styles/common.module.css';\nimport {useDrag} from \"react-dnd\";\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport {TIngredient} from \"../../../redux/types/ingredients\";\n\nexport const BurgerIngredientsItem: FC<{ data: TIngredient, selected: number }> = ({ data, selected }) => {\n    const [{ opacity }, dragRef] = useDrag({\n        type: 'ingredient',\n        item: { ...data },\n        collect: monitor => ({\n            opacity: monitor.isDragging() ? 0.5 : 1\n        })\n    });\n\n    const history = useHistory();\n    const location = useLocation();\n\n    const showDetails = useCallback(() => {\n        history.replace({\n            pathname: `ingredients/${data._id}`,\n            state: { background: location }\n        });\n    }, [data._id, history, location])\n\n    return (\n        <>\n            <div draggable ref={dragRef} style={{ opacity: opacity }} className={styles.item} onClick={showDetails}>\n                {selected > 0 ? <Counter count={selected}/> : null}\n                <div className={styles.image}>\n                    <img src={data.image}  alt=''/>\n                </div>\n                <div className={styles.price}>\n                    <span className='pr-3 text text_type_digits-default'>{data.price}</span>\n                    <CurrencyIcon type='primary'/>\n                </div>\n                <div className={`${CommonStyles.flexRow} ${CommonStyles.flexAICenter}`}>\n                    <span className={`${styles.name} pt-1`}>{data.name}</span>\n                </div>\n            </div>\n        </>\n    )\n}\n","import {\n    TypedUseSelectorHook,\n    useDispatch as dispatchHook,\n    useSelector as selectorHook\n} from 'react-redux';\nimport {AppDispatch, AppThunk, RootState} from \"./types\";\n\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>();\n","export interface IResponse {\n    success: boolean\n    message?: string\n    [name: string]: any\n}\n\nexport async function checkResponse(response: Response): Promise<IResponse> {\n    if (response.ok) {\n        return response.json();\n    }\n    const data = await response.json();\n    if (data.message) {\n        return Promise.reject(data.message);\n    }\n    return Promise.reject(`Ошибка ${response.status}`);\n}\n\nexport function checkSuccess<T>(jsonData: IResponse) {\n    const { success, ...data } = jsonData\n    if (success) {\n        return Promise.resolve(data as T);\n    } else {\n        return Promise.reject(data.message);\n    }\n}\n\nexport const getApiUrl = (endpoint: string): string => `https://norma.nomoreparties.space/api/${endpoint}`;\n\nexport const getWsApiUrl = (endpoint: string): string => `wss://norma.nomoreparties.space/${endpoint}`;\n","import React, {FC} from \"react\";\nimport commonStyles from '../../styles/common.module.css';\nimport styles from './burger-ingredients.module.css';\nimport {Tab} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport {BurgerIngredientsItem} from \"./burger-ingredients-item/burger-ingredients-item\";\nimport {useDispatch, useSelector} from \"../../redux/hooks\";\nimport {ingredientsSetTab} from \"../../redux/actions/ingredients\";\n\nexport const BurgerIngredients: FC = () => {\n    const dispatch = useDispatch();\n\n    const { rows: data, ingredientsTab } = useSelector(store => store.ingredients)\n    const { cart } = useSelector(store => store.burgerConstructor);\n\n    const tabClick = (tab: string, elRef: React.RefObject<HTMLDivElement>) => {\n        dispatch(ingredientsSetTab(tab));\n        elRef.current && elRef.current.scrollIntoView({behavior: 'smooth'});\n    }\n\n    const bunsRef = React.useRef<HTMLDivElement>(null);\n    const bunItems = React.useMemo(() => {\n        const buns = data.filter(item => item.type === 'bun');\n        return (\n            <>\n                <div ref={bunsRef} className='text text_type_main-medium pt-10 mb-6'>Булки</div>\n                <div className={`${commonStyles.flexRow} ${commonStyles.flexWrap} ${commonStyles.flexJCCenter}`}>\n                    {\n                        buns.map(item =>\n                            <BurgerIngredientsItem\n                                key={item._id}\n                                data={item}\n                                selected={cart.filter(cartItem => cartItem._id === item._id).length}\n                            />\n                        )\n                    }\n                </div>\n            </>\n        )\n    }, [cart, data]);\n\n    const saucesRef = React.useRef<HTMLDivElement>(null);\n    const sauceItems = React.useMemo(() => {\n        const sauces = data.filter(item => item.type === 'sauce');\n        return (\n            <>\n                <div ref={saucesRef} className='text text_type_main-medium pt-10 mb-6'>Соусы</div>\n                <div className={`${commonStyles.flexRow} ${commonStyles.flexWrap} ${commonStyles.flexJCCenter}`}>\n                    {\n                        sauces.map(item =>\n                            <BurgerIngredientsItem\n                                key={item._id}\n                                data={item}\n                                selected={cart.filter(cartItem => cartItem._id === item._id).length}\n                            />\n                        )\n                    }\n                </div>\n            </>\n        )\n    }, [cart, data]);\n\n    const mainsRef = React.useRef<HTMLDivElement>(null);\n    const mainItems = React.useMemo(() => {\n        const mains = data.filter(item => item.type === 'main');\n        return (\n            <>\n                <div ref={mainsRef} className='text text_type_main-medium pt-10 mb-6'>Начинки</div>\n                <div className={`${commonStyles.flexRow} ${commonStyles.flexWrap} ${commonStyles.flexJCCenter}`}>\n                    {\n                        mains.map(item =>\n                            <BurgerIngredientsItem\n                                data={item}\n                                key={item._id}\n                                selected={cart.filter(cartItem => cartItem._id === item._id).length}\n                            />\n                        )\n                    }\n                </div>\n            </>\n        )\n    }, [cart, data]);\n\n\n    let scrollEndTimeOut: NodeJS.Timeout | null = null;\n    const onScroll = (event: React.UIEvent<HTMLDivElement>) => {\n        if (scrollEndTimeOut) clearTimeout(scrollEndTimeOut);\n        scrollEndTimeOut = setTimeout(() => scrollEndHandler(event), 20);\n    }\n\n    const scrollEndHandler = (e: React.UIEvent<HTMLDivElement>) => {\n        const tabs = ['bun', 'sauce', 'main'];\n\n        const scrollContainer = e.target as HTMLDivElement;\n        const containerRect = scrollContainer.getBoundingClientRect();\n\n        const values = [];\n\n        if (!bunsRef.current) return;\n        const bunsRect = bunsRef.current.getBoundingClientRect();\n        const bunsY = Math.abs(bunsRect.y - containerRect.y);\n        values.push(bunsY);\n\n        if (!saucesRef.current) return;\n        const saucesRect = saucesRef.current.getBoundingClientRect();\n        const saucesY = Math.abs(saucesRect.y - containerRect.y);\n        values.push(saucesY);\n\n        if (!mainsRef.current) return;\n        const mainsRect = mainsRef.current.getBoundingClientRect();\n        const mainsY = Math.abs(mainsRect.y - containerRect.y);\n        values.push(mainsY);\n\n        const minValue = Math.min(...values);\n        const minIndex = values.indexOf(minValue);\n\n        if (ingredientsTab !== tabs[minIndex]) {\n        }\n    }\n\n\n    return (\n        <section className={`pt-10 ${styles.content} ${commonStyles.flexColumn} ${commonStyles.flexFill}`}>\n            <span className='text text_type_main-large'>Соберите бургер</span>\n            <div className={`pt-5 ${commonStyles.flexRow} ${commonStyles.flexFill}`}>\n                <Tab\n                    value=\"bun\"\n                    active={ingredientsTab === 'bun'}\n                    onClick={(tab) => tabClick(tab, bunsRef)}\n                >\n                    Булки\n                </Tab>\n                <Tab\n                    value=\"sauce\"\n                    active={ingredientsTab === 'sauce'}\n                    onClick={(tab) => tabClick(tab, saucesRef)}\n                >\n                    Соусы\n                </Tab>\n                <Tab\n                    value=\"main\"\n                    active={ingredientsTab === 'main'}\n                    onClick={(tab) => tabClick(tab, mainsRef)}\n                >\n                    Начинки\n                </Tab>\n            </div>\n            <section className={`scrollerY`} onScroll={onScroll}>\n                { bunItems }\n                { sauceItems }\n                { mainItems }\n            </section>\n        </section>\n    );\n}\n","import {\n    INGREDIENTS_FAILURE,\n    INGREDIENTS_REQUEST,\n    INGREDIENTS_SET_TAB,\n    INGREDIENTS_SUCCESS,\n} from \"../consts/ingredients\";\nimport {TIngredient} from \"../types/ingredients\";\nimport {AppDispatch, AppThunk} from \"../types\";\nimport {checkResponse, checkSuccess, getApiUrl} from \"../../services/http\";\n\ninterface IIngredientsRequestAction {\n    readonly type: typeof INGREDIENTS_REQUEST;\n}\nconst ingredientsRequest = (): IIngredientsRequestAction => ({\n    type: INGREDIENTS_REQUEST\n});\ninterface IIngredientsSuccessAction {\n    readonly type: typeof INGREDIENTS_SUCCESS;\n    readonly rows: TIngredient[];\n}\nconst ingredientsSuccess = (rows: TIngredient[]): IIngredientsSuccessAction => ({\n    type: INGREDIENTS_SUCCESS,\n    rows: rows\n});\ninterface IIngredientsFailureAction {\n    readonly type: typeof INGREDIENTS_FAILURE;\n}\nconst ingredientsFailure = (): IIngredientsFailureAction => ({\n    type: INGREDIENTS_FAILURE,\n});\n\ninterface IIngredientsSetTabAction {\n    readonly type: typeof INGREDIENTS_SET_TAB;\n    readonly tab: string;\n}\n\nexport type TIngredientsActions =\n    IIngredientsRequestAction |\n    IIngredientsSuccessAction |\n    IIngredientsFailureAction |\n    IIngredientsSetTabAction\n\nexport const getIngredientsThunk: AppThunk = () => (dispatch: AppDispatch) => {\n    dispatch(ingredientsRequest());\n    const endpoint = getApiUrl('ingredients');\n    fetch(endpoint)\n        .then(checkResponse)\n        .then(checkSuccess<{data: TIngredient[]}>)\n        .then(data => dispatch(ingredientsSuccess(data.data)))\n        .catch(() => dispatch(ingredientsFailure()));\n};\n\nexport const ingredientsSetTab = (tab: string): IIngredientsSetTabAction => ({\n    type: INGREDIENTS_SET_TAB,\n    tab\n});\n","export const INGREDIENTS_REQUEST: 'INGREDIENTS_REQUEST' = 'INGREDIENTS_REQUEST';\nexport const INGREDIENTS_SUCCESS: 'INGREDIENTS_SUCCESS' = 'INGREDIENTS_SUCCESS';\nexport const INGREDIENTS_FAILURE: 'INGREDIENTS_FAILURE' = 'INGREDIENTS_FAILURE';\n\nexport const INGREDIENTS_SET_TAB: 'INGREDIENTS_SET_TAB' = 'INGREDIENTS_SET_TAB';\n","import React, {FC} from \"react\";\nimport {IconButton} from \"../../icon-button/icon-button\";\nimport styles from './burger-constructor-item.module.css';\nimport commonStyles from '../../../styles/common.module.css';\nimport {CurrencyIcon, DragIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport {useDrag, useDrop} from \"react-dnd\";\nimport {useDispatch, useSelector} from \"../../../redux/hooks\";\nimport {constructorDel, constructorReplace} from \"../../../redux/actions/constructor\";\nimport {TConstructorDND} from \"../../../redux/types/constructor\";\nimport {TIngredient} from \"../../../redux/types/ingredients\";\n\nexport const BurgerConstructorItem: FC<{ ingredient: TIngredient }> = ({ ingredient }) => {\n    const dispatch = useDispatch();\n\n    const { cart } = useSelector(store => store.burgerConstructor);\n\n    const removeFromCart = () => dispatch(constructorDel(ingredient));\n\n    const [{ opacity }, dragRef] = useDrag({\n        type: 'ingredient_move',\n        item: { ...ingredient },\n        collect: monitor => ({\n            opacity: monitor.isDragging() ? .5 : 1\n        })\n    });\n\n    const [{ isHover, dropItem }, dropRef] = useDrop({\n        accept: 'ingredient_move',\n        drop(item: TIngredient) {\n            const data: TConstructorDND = {\n                dragIngredient: item,\n                dropIngredient: ingredient\n            };\n            dispatch(constructorReplace(data))\n        },\n        collect: monitor => ({\n            isHover: monitor.isOver(),\n            dropItem: monitor.getItem()\n        })\n    });\n\n    let dropToTop = 'none', dropToBottom = 'none';\n    if (isHover && dropItem.uuid !== ingredient.uuid) {\n        const dropIndex = cart.findIndex(item => item.uuid === dropItem.uuid);\n        const dragIndex = cart.findIndex(item => item.uuid === ingredient.uuid);\n        if (dropIndex >= dragIndex) {\n            dropToTop = 'block';\n        } else {\n            dropToBottom = 'block';\n        }\n    }\n\n    return (\n        <li ref={dropRef}>\n            <div className={styles.canDragUp} style={{display: dropToTop}}></div>\n            <div style={{opacity: opacity}} className={`${commonStyles.flexRow} ${commonStyles.flexFill} ${commonStyles.flexAICenter} mt-4`}>\n                <div draggable ref={dragRef} className={styles.dragPointer}>\n                    <DragIcon type='primary'/>\n                </div>\n                <div className={`pt-4 pb-4 pr-8 pl-6 mr-2 ml-2 ${styles.item} ${commonStyles.flexFill}`}>\n                    <img alt='' className={styles.smallImage} src={ingredient.image}/>\n                    <span className={`text text_type_main-default ml-5 ${commonStyles.flexFill}`}>{ingredient.name}</span>\n                    <span className='ml-5 mr-1 text text_type_digits-default'>{ingredient.price}</span>\n                    <CurrencyIcon type='primary'/>\n                    <div className='pl-5'>\n                       <IconButton icon='delete' click={removeFromCart}/>\n                    </div>\n                </div>\n            </div>\n            <div className={styles.canDragDown} style={{display: dropToBottom}}></div>\n        </li>\n    );\n}\n","import {CONSTRUCTOR_ADD, CONSTRUCTOR_DEL, CONSTRUCTOR_REPLACE, CONSTRUCTOR_RESET} from \"../consts/constructor\";\nimport {TIngredient} from \"../types/ingredients\";\nimport {TConstructorDND} from \"../types/constructor\";\n\ninterface IConstructorAddAction {\n    readonly type: typeof CONSTRUCTOR_ADD;\n    readonly ingredient: TIngredient\n}\nexport const constructorAdd = (ingredient: TIngredient): IConstructorAddAction => ({\n    type: CONSTRUCTOR_ADD,\n    ingredient: ingredient\n});\n\ninterface IConstructorDelAction {\n    readonly type: typeof CONSTRUCTOR_DEL;\n    readonly ingredient: TIngredient\n}\nexport const constructorDel = (ingredient: TIngredient): IConstructorDelAction => ({\n    type: CONSTRUCTOR_DEL,\n    ingredient: ingredient\n});\n\ninterface IConstructorReplaceAction {\n    readonly type: typeof CONSTRUCTOR_REPLACE;\n    readonly data: TConstructorDND\n}\nexport const constructorReplace = (data: TConstructorDND): IConstructorReplaceAction => ({\n    type: CONSTRUCTOR_REPLACE,\n    data: data\n});\n\ninterface IConstructorResetAction {\n    readonly type: typeof CONSTRUCTOR_RESET;\n}\nexport const constructorReset = (): IConstructorResetAction => ({\n    type: CONSTRUCTOR_RESET,\n});\n\nexport type TConstructorActions =\n    IConstructorAddAction |\n    IConstructorDelAction |\n    IConstructorReplaceAction |\n    IConstructorResetAction\n","export const CONSTRUCTOR_ADD: 'CONSTRUCTOR_ADD' = 'CONSTRUCTOR_ADD';\nexport const CONSTRUCTOR_DEL: 'CONSTRUCTOR_DEL' = 'CONSTRUCTOR_DEL';\nexport const CONSTRUCTOR_RESET: 'CONSTRUCTOR_RESET' = 'CONSTRUCTOR_RESET';\nexport const CONSTRUCTOR_REPLACE: 'CONSTRUCTOR_REPLACE' = 'CONSTRUCTOR_REPLACE';\n","import React, {FC} from \"react\";\nimport styles from './burger-constructor-bun-item.module.css';\nimport commonStyles from '../../../styles/common.module.css';\nimport {CurrencyIcon, LockIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport {TIngredient} from \"../../../redux/types/ingredients\";\n\nexport const BurgerConstructorBunItem: FC<{ role: \"top\" | \"bottom\", bun?: TIngredient }> = ({ role, bun }) => {\n    return (\n        <div className={`${commonStyles.flexRow} ${commonStyles.flexAICenter} pl-8`}>\n            <div className={\n                `pt-4 pb-4 pr-8 pl-6 mr-4\n                    ${commonStyles.panelColor}\n                    ${commonStyles.flexRow}\n                    ${commonStyles.flexAICenter}\n                    ${commonStyles.flexFill}\n                    ${role === 'top' ? styles.itemTop : styles.itemBottom}`\n            }>\n                <img style={{display: bun ? 'unset' : 'none'}} alt='' className={styles.smallImage} src={bun && bun.image}/>\n                <span className={`text text_type_main-default ml-5 ${commonStyles.flexFill}`}>{bun ? bun.name : 'выберите булку'}{role === 'top' ? ' (верх)' : ' (низ)'}</span>\n                <span className='ml-5 mr-1 text text_type_digits-default'>{bun ? bun.price / 2 : 0}</span>\n                <CurrencyIcon type='primary'/>\n                <div className='pl-5'>\n                    <LockIcon type='secondary'/>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React, {FC} from \"react\";\n\nimport Styles from './modal-overlay.module.css'\n\nexport const ModalOverlay: FC<{ onClick: () => void }> = ({ onClick }) => {\n    return (\n        <div onClick={onClick} className={`${Styles.modalOverlay}`}></div>\n    );\n}\n","import React, {FC, ReactNode} from \"react\";\nimport ReactDOM from 'react-dom'\n\nimport {CloseIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport Styles from './modal.module.css'\nimport CommonStyles from '../../styles/common.module.css'\nimport {ModalOverlay} from \"../modal-overlay/modal-overlay\";\n\nconst modalRoot = document.getElementById(\"react-modals\");\n\nexport const Modal: FC<{header: string, children: ReactNode, onClose: () => void}> = ({ header, children, onClose }) => {\n\n    if (modalRoot === null) {\n        // eslint-disable-next-line no-throw-literal\n        throw \"modal root is not implemented\";\n    }\n\n    React.useEffect(() => {\n        const closeByEsc = (e: KeyboardEvent) => {\n            if (e.key === 'Escape') onClose();\n        };\n        document.addEventListener('keyup', closeByEsc);\n        return () => document.removeEventListener('keyup', closeByEsc);\n    }, [onClose]);\n\n    return ReactDOM.createPortal(\n        <>\n            <div className={`${Styles.modal}`}>\n                <div className={`pt-10 pr-10 pl-10 ${CommonStyles.flexRow} ${CommonStyles.flexJCBetween}`}>\n                    <span className='text text_type_main-medium'>{ header }</span>\n                    <button onClick={onClose} className={`${CommonStyles.button}`}>\n                        <CloseIcon type='primary'/>\n                    </button>\n                </div>\n                <div className={`p-10`}>\n                    {children}\n                </div>\n            </div>\n            <ModalOverlay onClick={onClose}/>\n        </>,\n        modalRoot\n    );\n}\n","import styles from './spinner.module.css'\nimport {FC} from \"react\";\n\nexport const Spinner: FC<{ extraClass?: string, centered?: boolean }> = ({ extraClass, centered }) => {\n    return <div className={`${styles.spinner} ${extraClass} ${centered ? styles.centered : null }`}></div>\n}\n","export function jsonToQuery(json: any) {\n    const map = [];\n    for (const key in json) {\n        if (!json.hasOwnProperty(key)) continue;\n        map.push(`${key}=${json[key]}`);\n    }\n    return map.join(\"&\");\n}\n\nexport function setCookie(name: string, value: string | null, props?: any) {\n    props = props || {};\n    if (!props.path) {\n        props.path = \"/\";\n    }\n    let exp = props.expires;\n    if (typeof exp == 'number' && exp) {\n        const d = new Date();\n        d.setTime(d.getTime() + exp * 1000);\n        exp = props.expires = d;\n    }\n    if (exp && exp.toUTCString) {\n        props.expires = exp.toUTCString();\n    }\n    value = encodeURIComponent(value || \"\");\n    let updatedCookie = name + '=' + value;\n    for (const propName in props) {\n        updatedCookie += '; ' + propName;\n        const propValue = props[propName];\n        if (propValue !== true) {\n            updatedCookie += '=' + propValue;\n        }\n    }\n    document.cookie = updatedCookie;\n}\n\nexport function getCookie(name: string): string {\n    const matches = document.cookie.match(\n        new RegExp('(?:^|; )' + name.replace(/([.$?*|{}()[\\]\\\\/+^])/g, '\\\\$1') + '=([^;]*)')\n    );\n    return matches ? decodeURIComponent(matches[1]) : \"\";\n}\n","import {\n    AUTH_USER_FAILURE,\n    AUTH_USER_REQUEST,\n    AUTH_USER_SUCCESS,\n    FORGOT_PASSWORD_FAILURE,\n    FORGOT_PASSWORD_REQUEST,\n    FORGOT_PASSWORD_SUCCESS,\n    LOGIN_USER_FAILURE,\n    LOGIN_USER_REQUEST,\n    LOGIN_USER_SUCCESS,\n    LOGOUT_USER_FAILURE,\n    LOGOUT_USER_REQUEST,\n    LOGOUT_USER_SUCCESS, REGISTER_USER_FAILURE,\n    REGISTER_USER_REQUEST, REGISTER_USER_SUCCESS,\n    RESET_PASSWORD_FAILURE,\n    RESET_PASSWORD_REQUEST,\n    RESET_PASSWORD_SUCCESS,\n    UPDATE_USER_FAILURE,\n    UPDATE_USER_REQUEST,\n    UPDATE_USER_SUCCESS,\n    USER_CREATE_ORDER_FAILURE,\n    USER_CREATE_ORDER_REQUEST,\n    USER_CREATE_ORDER_SUCCESS\n} from \"../consts/user\";\nimport {\n    TCreateOrderResponse,\n    TLoginRequest,\n    TLoginResponse,\n    TOrder,\n    TResetPasswordRequest,\n    TUser,\n    TUserUpdateRequest\n} from \"../types/user\";\nimport {AppDispatch, AppThunk} from \"../types\";\nimport {checkResponse, checkSuccess, getApiUrl} from \"../../services/http\";\nimport {getCookie, setCookie} from \"../../utils/common\";\n\n// USER LOGIN\ninterface IUserLoginRequestAction {\n    readonly type: typeof LOGIN_USER_REQUEST;\n}\nconst userLoginRequest = (): IUserLoginRequestAction => ({\n    type: LOGIN_USER_REQUEST\n});\n\ninterface IUserLoginSuccessAction {\n    readonly type: typeof LOGIN_USER_SUCCESS;\n    readonly user: TUser\n}\nconst userLoginSuccess = (user: TUser): IUserLoginSuccessAction => ({\n    type: LOGIN_USER_SUCCESS,\n    user: user\n});\n\ninterface IUserLoginFailureAction {\n    readonly type: typeof LOGIN_USER_FAILURE;\n}\nconst userLoginFailure = (): IUserLoginFailureAction => ({\n    type: LOGIN_USER_FAILURE,\n});\n\nexport const userLoginThunk: AppThunk = (login: TLoginRequest) => (dispatch: AppDispatch) => {\n    dispatch(userLoginRequest());\n    const promise = fetch(getApiUrl('auth/login'), {\n        method: 'POST',\n        body: JSON.stringify(login),\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8',\n        },\n    })\n    promise\n        .then(checkResponse)\n        .then(checkSuccess<TLoginResponse>)\n        .then(data => {\n            localStorage.setItem(\"refreshToken\", data.refreshToken || \"\");\n            setCookie(\"accessToken\", data.accessToken || \"\");\n            dispatch(userLoginSuccess(data.user))\n        })\n        .catch(() => dispatch(userLoginFailure()));\n};\n\n// USER CREATE ORDER\ninterface IUserCreateOrderRequestAction {\n    readonly type: typeof USER_CREATE_ORDER_REQUEST;\n}\nconst userCreateOrderRequest = (): IUserCreateOrderRequestAction => ({\n    type: USER_CREATE_ORDER_REQUEST\n});\n\nexport interface IUserCreateOrderSuccessAction {\n    readonly type: typeof USER_CREATE_ORDER_SUCCESS;\n    readonly order: TOrder\n}\nconst userCreateOrderSuccess = (order: TOrder): IUserCreateOrderSuccessAction => ({\n    type: USER_CREATE_ORDER_SUCCESS,\n    order: order\n});\n\ninterface IUserCreateOrderFailureAction {\n    readonly type: typeof USER_CREATE_ORDER_FAILURE;\n}\nconst userCreateOrderFailure = (): IUserCreateOrderFailureAction => ({\n    type: USER_CREATE_ORDER_FAILURE\n});\n\nexport const userCreateOrderThunk: AppThunk = (ingredients: string[]) => (dispatch: AppDispatch) => {\n    dispatch(userCreateOrderRequest());\n    const promise = fetch(getApiUrl(\"orders\"), {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ ingredients: ingredients }),\n    });\n    promise\n        .then(checkResponse)\n        .then(checkSuccess<TCreateOrderResponse>)\n        .then(data => dispatch(userCreateOrderSuccess({ name: data.name, number: data.order.number })))\n        .catch(() => dispatch(userCreateOrderFailure()));\n};\n\n// USER AUTH\ninterface IUserAuthRequestAction {\n    readonly type: typeof AUTH_USER_REQUEST;\n}\nexport const userAuthRequest = (): IUserAuthRequestAction => ({\n    type: AUTH_USER_REQUEST\n});\n\ninterface IUserAuthSuccessAction {\n    readonly type: typeof AUTH_USER_SUCCESS;\n    readonly user: TUser\n}\nconst userAuthSuccess = (user: TUser): IUserAuthSuccessAction => ({\n    type: AUTH_USER_SUCCESS,\n    user: user\n});\n\ninterface IUserAuthFailureAction {\n    readonly type: typeof AUTH_USER_FAILURE;\n}\nconst userAuthFailure = (): IUserAuthFailureAction => ({\n    type: AUTH_USER_FAILURE,\n});\n\nexport const userAuthThunk: AppThunk = () => (dispatch: AppDispatch) => {\n    dispatch(userAuthRequest());\n    const promise = fetch(getApiUrl(\"auth/user\"), {\n        method: 'GET',\n        headers: {\n            \"Authorization\": getCookie(\"accessToken\"),\n        },\n    });\n    promise\n        .then(checkResponse)\n        .then(checkSuccess<{user: TUser}>)\n        .then(data => dispatch(userAuthSuccess(data.user)))\n        .catch((err) => {\n            if (err === \"jwt expire\") {\n                dispatch(userAuthFailure());\n            } else {\n                dispatch(userAuthFailure());\n            }\n        });\n};\n\n// USER FORGOT PASSWORD\ninterface IUserForgotPasswordRequestAction {\n    readonly type: typeof FORGOT_PASSWORD_REQUEST;\n}\nconst userForgotPasswordRequest = (): IUserForgotPasswordRequestAction => ({\n    type: FORGOT_PASSWORD_REQUEST\n});\n\ninterface IUserForgotPasswordSuccessAction {\n    readonly type: typeof FORGOT_PASSWORD_SUCCESS;\n}\nconst userForgotPasswordSuccess = (): IUserForgotPasswordSuccessAction => ({\n    type: FORGOT_PASSWORD_SUCCESS\n});\n\ninterface IUserForgotPasswordFailureAction {\n    readonly type: typeof FORGOT_PASSWORD_FAILURE;\n}\nconst userForgotPasswordFailure = (): IUserForgotPasswordFailureAction => ({\n    type: FORGOT_PASSWORD_FAILURE\n});\n\nexport const userForgotPasswordThunk: AppThunk = (email: string) => (dispatch: AppDispatch) => {\n    dispatch(userForgotPasswordRequest());\n    const promise = fetch(getApiUrl(\"password-reset\"), {\n        method: 'POST',\n        body: JSON.stringify({ email } ),\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8',\n        },\n    });\n    promise\n        .then(checkResponse)\n        .then(checkSuccess)\n        .then(() => dispatch(userForgotPasswordSuccess()))\n        .catch(() => dispatch(userForgotPasswordFailure()));\n};\n\n// USER RESET PASSWORD\ninterface IUserResetPasswordRequestAction {\n    readonly type: typeof RESET_PASSWORD_REQUEST;\n}\nconst userResetPasswordRequest = (): IUserResetPasswordRequestAction => ({\n    type: RESET_PASSWORD_REQUEST\n});\n\ninterface IUserResetPasswordSuccessAction {\n    readonly type: typeof RESET_PASSWORD_SUCCESS;\n}\nconst userResetPasswordSuccess = (): IUserResetPasswordSuccessAction => ({\n    type: RESET_PASSWORD_SUCCESS\n});\n\ninterface IUserResetPasswordFailureAction {\n    readonly type: typeof RESET_PASSWORD_FAILURE;\n}\nconst userResetPasswordFailure = (): IUserResetPasswordFailureAction => ({\n    type: RESET_PASSWORD_FAILURE\n});\n\nexport const userResetPasswordThunk: AppThunk = (data: TResetPasswordRequest) => (dispatch: AppDispatch) => {\n    dispatch(userResetPasswordRequest());\n    const promise = fetch(getApiUrl(\"password-reset/reset\"), {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8',\n        },\n    });\n    promise\n        .then(checkResponse)\n        .then(checkSuccess)\n        .then(() => dispatch(userResetPasswordSuccess()))\n        .catch(() => dispatch(userResetPasswordFailure()));\n};\n\n// USER LOGOUT\ninterface IUserLogoutRequestAction {\n    readonly type: typeof LOGOUT_USER_REQUEST;\n}\nconst userLogoutRequest = (): IUserLogoutRequestAction => ({\n    type: LOGOUT_USER_REQUEST\n});\n\ninterface IUserLogoutSuccessAction {\n    readonly type: typeof LOGOUT_USER_SUCCESS;\n}\nconst userLogoutSuccess= (): IUserLogoutSuccessAction => ({\n    type: LOGOUT_USER_SUCCESS\n});\n\ninterface IUserLogoutFailureAction {\n    readonly type: typeof LOGOUT_USER_FAILURE;\n}\nconst userLogoutFailure= (): IUserLogoutFailureAction => ({\n    type: LOGOUT_USER_FAILURE\n});\n\nexport const userLogoutThunk: AppThunk = () => (dispatch: AppDispatch) => {\n    dispatch(userLogoutRequest());\n    const promise = fetch(getApiUrl(\"auth/logout\"), {\n        method: \"POST\",\n        body: JSON.stringify({\n            token: localStorage.getItem(\"refreshToken\")\n        }),\n        headers: {\n            \"Content-Type\": \"application/json;charset=utf-8\",\n        },\n    });\n    promise\n        .then(checkResponse)\n        .then(checkSuccess)\n        .then(() => dispatch(userLogoutSuccess()))\n        .catch(() => dispatch(userLogoutFailure()));\n};\n\n// USER UPDATE\ninterface IUserUpdateRequestAction {\n    readonly type: typeof UPDATE_USER_REQUEST;\n}\nconst userUpdateRequest = (): IUserUpdateRequestAction => ({\n    type: UPDATE_USER_REQUEST\n});\n\ninterface IUserUpdateSuccessAction {\n    readonly type: typeof UPDATE_USER_SUCCESS;\n    readonly user: TUser\n}\nconst userUpdateSuccess = (user: TUser): IUserUpdateSuccessAction => ({\n    type: UPDATE_USER_SUCCESS,\n    user: user\n});\n\ninterface IUserUpdateFailureAction {\n    readonly type: typeof UPDATE_USER_FAILURE;\n}\nconst userUpdateFailure = (): IUserUpdateFailureAction => ({\n    type: UPDATE_USER_FAILURE\n});\n\nexport const userUpdateThunk: AppThunk = (data: TUserUpdateRequest) => (dispatch: AppDispatch) => {\n    dispatch(userUpdateRequest());\n    const promise = fetch(getApiUrl(\"auth/user\"), {\n        method: 'PATCH',\n        headers: {\n            \"Authorization\": getCookie(\"accessToken\"),\n            \"Content-Type\": \"application/json;charset=utf-8\",\n        },\n        body: JSON.stringify(data)\n    });\n    promise\n        .then(checkResponse)\n        .then(checkSuccess<{user: TUser}>)\n        .then((data) => dispatch(userUpdateSuccess(data.user)))\n        .catch(() => dispatch(userUpdateFailure()));\n};\n\n// USER REGISTER\n\ninterface IUserRegisterRequestAction {\n    readonly type: typeof REGISTER_USER_REQUEST;\n}\nconst userRegisterRequest = (): IUserRegisterRequestAction => ({\n    type: REGISTER_USER_REQUEST\n});\n\ninterface IUserRegisterSuccessAction {\n    readonly type: typeof REGISTER_USER_SUCCESS;\n    readonly user: TUser\n}\nconst userRegisterSuccess = (user: TUser): IUserRegisterSuccessAction => ({\n    type: REGISTER_USER_SUCCESS,\n    user: user\n});\n\ninterface IUserRegisterFailureAction {\n    readonly type: typeof REGISTER_USER_FAILURE;\n}\nconst userRegisterFailure = (): IUserRegisterFailureAction => ({\n    type: REGISTER_USER_FAILURE\n});\n\nexport const userRegisterThunk: AppThunk = (user: TUser) => (dispatch: AppDispatch) => {\n    dispatch(userRegisterRequest());\n    const promise = fetch(getApiUrl(\"auth/register\"), {\n        method: 'POST',\n        body: JSON.stringify(user),\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8',\n        },\n    });\n    promise\n        .then(checkResponse)\n        .then(checkSuccess<TLoginResponse>)\n        .then((data) => {\n            localStorage.setItem(\"refreshToken\", data.refreshToken || \"\");\n            setCookie(\"accessToken\", data.accessToken || \"\");\n            dispatch(userRegisterSuccess(data.user))\n        })\n        .catch(() => dispatch(userRegisterFailure()));\n};\n\n\nexport type TUserActions =\n    IUserLoginRequestAction |\n    IUserLoginSuccessAction |\n    IUserLoginFailureAction |\n    IUserCreateOrderRequestAction |\n    IUserCreateOrderSuccessAction |\n    IUserCreateOrderFailureAction |\n    IUserAuthRequestAction |\n    IUserAuthSuccessAction |\n    IUserAuthFailureAction |\n    IUserForgotPasswordRequestAction |\n    IUserForgotPasswordSuccessAction |\n    IUserForgotPasswordFailureAction |\n    IUserResetPasswordRequestAction |\n    IUserResetPasswordSuccessAction |\n    IUserResetPasswordFailureAction |\n    IUserLogoutRequestAction |\n    IUserLogoutSuccessAction |\n    IUserLogoutFailureAction |\n    IUserUpdateRequestAction |\n    IUserUpdateSuccessAction |\n    IUserUpdateFailureAction |\n    IUserRegisterRequestAction |\n    IUserRegisterSuccessAction |\n    IUserRegisterFailureAction\n\n\n/*function refreshTokenRequest() {\n    return fetch(getApiUrl('auth/token'), {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8'\n        },\n        body: JSON.stringify({\n            token: localStorage.getItem('refreshToken')\n        })\n    }).then(checkResponse).then(checkSuccess);\n}\n\nfunction refreshToken(afterRefresh: Function, data) {\n    return function (dispatch: Function) {\n        refreshTokenRequest()\n            .then((response: TLoginResponse) => {\n                localStorage.setItem(\"refreshToken\", response.refreshToken || \"\");\n                setCookie(\"accessToken\", response.accessToken || \"\");\n                dispatch(afterRefresh(data));\n            })\n    }\n}*/\n\n","export const FORGOT_PASSWORD_REQUEST: 'FORGOT_PASSWORD_REQUEST' = 'FORGOT_PASSWORD_REQUEST';\nexport const FORGOT_PASSWORD_SUCCESS: 'FORGOT_PASSWORD_SUCCESS' = 'FORGOT_PASSWORD_SUCCESS';\nexport const FORGOT_PASSWORD_FAILURE: 'FORGOT_PASSWORD_FAILURE' = 'FORGOT_PASSWORD_FAILURE';\n\nexport const RESET_PASSWORD_REQUEST: 'RESET_PASSWORD_REQUEST' = 'RESET_PASSWORD_REQUEST';\nexport const RESET_PASSWORD_SUCCESS: 'RESET_PASSWORD_SUCCESS' = 'RESET_PASSWORD_SUCCESS';\nexport const RESET_PASSWORD_FAILURE: 'RESET_PASSWORD_FAILURE' = 'RESET_PASSWORD_FAILURE';\n\nexport const REGISTER_USER_REQUEST: 'REGISTER_USER_REQUEST' = 'REGISTER_USER_REQUEST';\nexport const REGISTER_USER_SUCCESS: 'REGISTER_USER_SUCCESS' = 'REGISTER_USER_SUCCESS';\nexport const REGISTER_USER_FAILURE: 'REGISTER_USER_FAILURE' = 'REGISTER_USER_FAILURE';\n\nexport const LOGIN_USER_REQUEST: 'LOGIN_USER_REQUEST' = 'LOGIN_USER_REQUEST';\nexport const LOGIN_USER_SUCCESS: 'LOGIN_USER_SUCCESS' = 'LOGIN_USER_SUCCESS';\nexport const LOGIN_USER_FAILURE: 'LOGIN_USER_FAILURE' = 'LOGIN_USER_FAILURE';\n\nexport const LOGOUT_USER_REQUEST: 'LOGOUT_USER_REQUEST' = 'LOGOUT_USER_REQUEST';\nexport const LOGOUT_USER_SUCCESS: 'LOGOUT_USER_SUCCESS' = 'LOGOUT_USER_SUCCESS';\nexport const LOGOUT_USER_FAILURE: 'LOGOUT_USER_FAILURE' = 'LOGOUT_USER_FAILURE';\n\nexport const AUTH_USER_REQUEST: 'AUTH_USER_REQUEST' = 'AUTH_USER_REQUEST';\nexport const AUTH_USER_SUCCESS: 'AUTH_USER_SUCCESS' = 'AUTH_USER_SUCCESS';\nexport const AUTH_USER_FAILURE: 'AUTH_USER_FAILURE' = 'AUTH_USER_FAILURE';\n\nexport const UPDATE_USER_REQUEST: 'UPDATE_USER_REQUEST' = 'UPDATE_USER_REQUEST';\nexport const UPDATE_USER_SUCCESS: 'UPDATE_USER_SUCCESS' = 'UPDATE_USER_SUCCESS';\nexport const UPDATE_USER_FAILURE: 'UPDATE_USER_FAILURE' = 'UPDATE_USER_FAILURE';\n\nexport const USER_CREATE_ORDER_REQUEST: 'USER_CREATE_ORDER_REQUEST' = 'USER_CREATE_ORDER_REQUEST';\nexport const USER_CREATE_ORDER_SUCCESS: 'USER_CREATE_ORDER_SUCCESS' = 'USER_CREATE_ORDER_SUCCESS';\nexport const USER_CREATE_ORDER_FAILURE: 'USER_CREATE_ORDER_FAILURE' = 'USER_CREATE_ORDER_FAILURE';\n","import CommonStyles from '../../../styles/common.module.css'\nimport {CheckMarkIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport React, {FC} from \"react\";\nimport {Spinner} from \"../../spinner/spinner\";\nimport {Redirect, useLocation} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"../../../redux/hooks\";\nimport {constructorReset} from \"../../../redux/actions/constructor\";\nimport {userCreateOrderThunk} from \"../../../redux/actions/user\";\n\nexport const OrderDetails: FC = () => {\n    const dispatch = useDispatch();\n\n    const location = useLocation();\n\n    const {\n        user,\n        order,\n        userCreateOrderRequest,\n        userCreateOrderFailure\n    } = useSelector(store => store.user);\n\n    const { cart } = useSelector(store => store.burgerConstructor);\n\n    React.useEffect(() => {\n        if (order) dispatch(constructorReset());\n    }, [dispatch, order])\n\n\n    React.useEffect(() => {\n        if (user) {\n            const ingredients = cart.map(item => item._id);\n            dispatch(userCreateOrderThunk(ingredients))\n        }\n    }, [user, dispatch]); // eslint-disable-line react-hooks/exhaustive-deps\n\n    if (!user) {\n        return <Redirect to={{\n            pathname: '/login',\n            state: {\n                from: location.pathname\n            }\n        }} />;\n    }\n\n    const orderDetails = (\n        <div className={`${CommonStyles.flexColumn}`}>\n            <span className={`text text_type_digits-large ${CommonStyles.textCenter}`}>{order && order.number}</span>\n            <span className={`text text_type_main-default ${CommonStyles.textCenter}`}>идентификатор заказа</span>\n            <div className={`pt-15 pb-15 ${CommonStyles.textCenter}`}>\n                <CheckMarkIcon type={\"primary\"}/>\n            </div>\n            <span className={`text text_type_main-small ${CommonStyles.textCenter}`}>Ваш заказ начали готовить</span>\n            <span className={`mt-2 text text_color_inactive text_type_main-small ${CommonStyles.textCenter}`}>Дождитесь готовности на орбитальной станции</span>\n        </div>\n    );\n\n    return userCreateOrderRequest\n        ? (<div className={`${CommonStyles.flexColumn} ${CommonStyles.flexAICenter}`}><Spinner/></div>)\n        : userCreateOrderFailure\n            ? <span>Ошибка создания заказа</span>\n            : orderDetails;\n}\n","import React, {FC} from \"react\";\nimport {BurgerConstructorItem} from \"./burger-construcor-item/burger-constructor-item\";\nimport {BurgerConstructorBunItem} from \"./burger-construcor-bun-item/burger-constructor-bun-item\";\nimport commonStyles from '../../styles/common.module.css';\nimport styles from './burger-construtor.module.css';\n\nimport {Button, CurrencyIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport {Modal} from \"../modal/modal\";\nimport {OrderDetails} from \"./order-details/order-details\";\nimport {useDrop} from \"react-dnd\";\nimport {useDispatch, useSelector} from \"../../redux/hooks\";\nimport {constructorAdd} from \"../../redux/actions/constructor\";\nimport {TIngredient} from \"../../redux/types/ingredients\";\n\nexport const BurgerConstructor: FC = () => {\n    const dispatch = useDispatch()\n    const [, dropTarget] = useDrop<TIngredient>({\n        accept: \"ingredient\",\n        drop(ingredient) {\n            dispatch(constructorAdd(ingredient))\n        },\n    });\n\n    const [createOrder, setCreateOrder] = React.useState(false);\n\n    const { cart, totalPrice } = useSelector(store => store.burgerConstructor);\n\n    const showCreateOrderModal = () => setCreateOrder(true);\n    const closeCreateOrderModal = () => setCreateOrder(false);\n\n    const bunItem = React.useMemo(() => cart.filter(x => x.type === 'bun'), [cart]);\n    const ingredientItems = React.useMemo(() => {\n        return cart.filter(x => x.type !== 'bun').map((cartItem) =>\n            <BurgerConstructorItem\n                key={cartItem.uuid}\n                ingredient={cartItem}\n            />\n        )\n    }, [cart]);\n\n    return (\n        <>\n            <section ref={dropTarget} className={`pt-25 ml-10 ${commonStyles.flexColumn} ${styles.content}`}>\n                <BurgerConstructorBunItem role='top' bun={bunItem && bunItem[0]} />\n                    <ul className={`scrollerY ${commonStyles.flexColumn} ${styles.list}`}>\n                        { ingredientItems }\n                    </ul>\n                <BurgerConstructorBunItem role='bottom' bun={bunItem && bunItem[0]} />\n                <div style={{visibility: totalPrice > 0 ? 'visible' : 'hidden'}} className={`pt-10 ${commonStyles.flexRow} ${commonStyles.flexAICenter} ${commonStyles.flexJCRight}`}>\n                    <span className='text text_type_digits-medium'>{totalPrice}</span>\n                    <CurrencyIcon type='primary'/>\n                    <div className='ml-10'>\n                        <Button onClick={showCreateOrderModal} htmlType={'button'}>Оформить заказ</Button>\n                    </div>\n                </div>\n            </section>\n            {createOrder && (\n                    <Modal header={'Детали заказа'} onClose={closeCreateOrderModal}>\n                        <OrderDetails/>\n                    </Modal>\n            )}\n        </>\n    );\n}\n","import React, {FC} from \"react\";\nimport commonStyles from \"../../styles/common.module.css\";\nimport {BurgerIngredients} from \"../burger-ingredients/burger-ingredients\";\nimport {BurgerConstructor} from \"../burger-constructor/burger-constructor\";\nimport {Spinner} from \"../spinner/spinner\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport {useSelector} from \"../../redux/hooks\";\n\nexport const BurgerPage: FC = () => {\n    const { ingredientsRequest, ingredientsFailure } = useSelector(store => store.ingredients);\n    return (\n        <section className={`${commonStyles.flexRow} ${commonStyles.flexJCCenter} ${commonStyles.page} pb-4`}>\n            {\n                ingredientsRequest\n                ? <Spinner extraClass={`${commonStyles.flexItemASCenter}`} />\n                : ingredientsFailure\n                    ? <span>Ошибка получения списка ингредиентов :(</span>\n                    :\n                        <DndProvider backend={HTML5Backend}>\n                            <BurgerIngredients/>\n                            <BurgerConstructor/>\n                        </DndProvider>\n            }\n        </section>\n    );\n}\n","import React, {FC, FormEvent, useCallback, useEffect, useState} from \"react\";\nimport CommonStyles from \"../../styles/common.module.css\"\nimport {Button, Input} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport {Link, Redirect, useLocation} from \"react-router-dom\";\nimport {Spinner} from \"../../components/spinner/spinner\";\nimport commonStyles from \"../../styles/common.module.css\";\nimport {useDispatch, useSelector} from \"../../redux/hooks\";\nimport {TLoginRequest} from \"../../redux/types/user\";\nimport {userAuthThunk, userLoginThunk} from \"../../redux/actions/user\";\n\nexport const LoginPage: FC = () => {\n    const dispatch = useDispatch();\n\n    const [email, setEmail] = useState<string>('');\n    const [password, setPassword] = useState<string>('');\n    const [pwdType, setPwdType] = useState<\"password\" | \"text\">('password');\n\n    useEffect(() => {\n        dispatch(userAuthThunk());\n    }, [dispatch]);\n\n    const loginUserCallback = useCallback((e: FormEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const payload: TLoginRequest = {\n            email: email,\n            password: password\n        }\n        dispatch(userLoginThunk(payload));\n    }, [dispatch, email, password])\n\n    const showPassword = () => {\n        setPwdType(pwdType === 'password' ? 'text' : 'password')\n    }\n\n    const {\n        user,\n        userAuthRequest,\n        userLoginRequest,\n        userLoginFailure,\n    } = useSelector(store => store.user);\n\n    const location = useLocation<{ from: string | undefined }>();\n    if (user) {\n        return <Redirect to={location.state?.from || '/'} />;\n    }\n    return (\n            <section className={`\n                ${CommonStyles.flexColumn} \n                ${CommonStyles.flexAICenter} \n                ${CommonStyles.flexJCCenter} \n                ${CommonStyles.flexFill}\n            `}>\n                {\n                    userLoginRequest || userAuthRequest\n                    ? (\n                        <Spinner extraClass={`${commonStyles.flexItemASCenter}`}/>\n                    )\n                    : (\n                        <form onSubmit={loginUserCallback}>\n                            <span className={`text_type_main-default text_color_primary`}>Вход</span>\n                            <div className={`mt-6`}>\n                                <Input\n                                    name={\"email\"}\n                                    disabled={userLoginRequest}\n                                    value={email}\n                                    type={'email'}\n                                    placeholder={'E-mail'}\n                                    onChange={e => setEmail(e.target.value)}\n                                />\n                            </div>\n                            <div className={`mt-6`}>\n                                <Input\n                                    name={\"password\"}\n                                    disabled={userLoginRequest}\n                                    value={password}\n                                    type={pwdType}\n                                    placeholder={'Пароль'}\n                                    icon={'ShowIcon'}\n                                    onIconClick={showPassword}\n                                    onChange={e => setPassword(e.target.value)}\n                                />\n                            </div>\n                            {userLoginFailure && <span className='text_type_main-small text_color_error mt-6'>Ошибка авторизации</span>}\n                            <div className={`mt-6`}>\n                                <Button htmlType=\"submit\" disabled={userLoginRequest}>Войти</Button>\n                            </div>\n                            <div className={`mt-20`}>\n                                <span className={`text_type_main-default text_color_inactive`}>Вы - новый пользователь? </span>\n                                <Link to='/register' className={`text_type_main-default text_color_accent ${CommonStyles.textDecorationNone}`}>Зарегистрироваться</Link>\n                            </div>\n                            <div className={`mt-4`}>\n                                <span className={`text_type_main-default text_color_inactive`}>Забыли пароль? </span>\n                                <Link to='/forgot-password' className={`text_type_main-default text_color_accent ${CommonStyles.textDecorationNone}`}>Восстановить пароль</Link>\n                            </div>\n                        </form>\n                    )\n                }\n            </section>\n    );\n}\n","import React, {FC, FormEvent, useCallback, useEffect, useState} from \"react\";\nimport CommonStyles from \"../../styles/common.module.css\";\nimport {Button, Input} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"../../redux/hooks\";\nimport {userAuthThunk, userRegisterThunk} from \"../../redux/actions/user\";\nimport {TUser} from \"../../redux/types/user\";\n\nexport const RegisterPage: FC = () => {\n    const dispatch = useDispatch();\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [pwdType, setPwdType] = useState<\"password\" | \"text\">('password');\n\n    useEffect(() => {\n        dispatch(userAuthThunk());\n    }, [dispatch]);\n\n    const showPassword = () => {\n        setPwdType(pwdType === 'password' ? 'text' : 'password')\n    }\n\n    const registerUserCallback = useCallback((e: FormEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const payload: TUser = {\n            email: email,\n            password: password,\n            name: name\n        }\n        dispatch(userRegisterThunk(payload));\n    }, [email, password, name, dispatch])\n\n    const {\n        user,\n        userRegisterRequest,\n        userRegisterFailure\n    } = useSelector(store => store.user);\n\n    if (user) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <form className={`\n            ${CommonStyles.flexColumn} \n            ${CommonStyles.flexAICenter} \n            ${CommonStyles.flexJCCenter} \n            ${CommonStyles.flexFill}\n        `} onSubmit={registerUserCallback}>\n            <span className={`text_type_main-default text_color_primary`}>Регистрация</span>\n            <div className={`mt-6`}>\n                <Input\n                    disabled={userRegisterRequest}\n                    value={name}\n                    type={'text'}\n                    placeholder={'Имя'}\n                    onChange={e => setName(e.target.value)}\n                />\n            </div>\n            <div className={`mt-6`}>\n                <Input\n                    disabled={userRegisterRequest}\n                    value={email}\n                    type={'email'}\n                    placeholder={'E-mail'}\n                    onChange={e => setEmail(e.target.value)}\n                />\n            </div>\n            <div className={`mt-6`}>\n                <Input\n                    disabled={userRegisterRequest}\n                    value={password}\n                    type={pwdType}\n                    placeholder={'Пароль'}\n                    icon={'ShowIcon'}\n                    onIconClick={showPassword}\n                    onChange={e => setPassword(e.target.value)}\n                />\n            </div>\n            {userRegisterFailure && <span className='text_type_main-small text_color_error mt-6'>Ошибка регистрации</span>}\n            <div className={`mt-6`}>\n                <Button htmlType=\"submit\" disabled={userRegisterRequest}>Зарегистрироваться</Button>\n            </div>\n            <div className={`mt-20`}>\n                <span className={`text_type_main-default text_color_inactive`}>Уже зарегистрированы?</span>\n                <Link to={'/login'} className={`text_type_main-default text_color_accent ${CommonStyles.textDecorationNone}`}>Войти</Link>\n            </div>\n        </form>\n    );\n}\n","import CommonStyles from \"../../styles/common.module.css\";\nimport {Button, Input} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport React, {FC, FormEvent, useCallback, useEffect, useState} from \"react\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"../../redux/hooks\";\nimport {userForgotPasswordThunk} from \"../../redux/actions/user\";\n\nexport const ForgotPasswordPage: FC = () => {\n    const [email, setEmail] = useState('');\n\n    const dispatch = useDispatch();\n    const {\n        user,\n        userForgotPasswordRequest,\n        userForgotPasswordSuccess\n    } = useSelector(store => store.user);\n\n    useEffect(() => {\n        //dispatch(authUser() as AnyAction);\n    }, []);\n\n    const reqForgotPassword = useCallback((e: FormEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        dispatch(userForgotPasswordThunk(email));\n    }, [dispatch, email]);\n\n    if (user) {\n        return <Redirect to=\"/\" />;\n    }\n\n    if (userForgotPasswordSuccess) {\n        return <Redirect push to=\"/reset-password\" />;\n    }\n\n    return (\n        <form className={`\n            ${CommonStyles.flexColumn} \n            ${CommonStyles.flexAICenter} \n            ${CommonStyles.flexJCCenter} \n            ${CommonStyles.flexFill}\n        `} onSubmit={reqForgotPassword}>\n            <span className={`text_type_main-default text_color_primary`}>Восстановление пароля</span>\n            <div className={`mt-6`}>\n                <Input\n                    disabled={userForgotPasswordRequest}\n                    value={email}\n                    type={'email'}\n                    placeholder={'E-mail'}\n                    onChange={e => setEmail(e.target.value)}\n                />\n            </div>\n            <div className={`mt-6`}>\n                <Button htmlType=\"submit\" disabled={userForgotPasswordRequest}>Восстановить</Button>\n            </div>\n            <div className={`mt-20`}>\n                <span className={`text_type_main-default text_color_inactive`}>Вспомнили пароль?</span>\n                <Link to={'/login'} className={`text_type_main-default text_color_accent ${CommonStyles.textDecorationNone}`}>Войти</Link>\n            </div>\n        </form>\n    );\n}\n","import React, {FC, FormEvent, useCallback, useEffect, useState} from \"react\";\nimport CommonStyles from \"../../styles/common.module.css\";\nimport {Button, Input} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"../../redux/hooks\";\nimport {TResetPasswordRequest} from \"../../redux/types/user\";\nimport {userAuthThunk, userResetPasswordThunk} from \"../../redux/actions/user\";\n\nexport interface IResetPasswordPayload {\n    token: string\n    password: string\n}\n\nexport const ResetPasswordPage: FC = () => {\n    const dispatch = useDispatch();\n\n    const [newPwd, setNewPwd] = useState<string>(\"\");\n    const [emailCode, setEmailCode] = useState<string>(\"\");\n    const [pwdType, setPwdType] = useState<\"password\" | \"text\">(\"password\");\n\n    const showPassword = () => {\n        setPwdType(pwdType === \"password\" ? \"text\" : \"password\")\n    }\n\n    useEffect(() => {\n        dispatch(userAuthThunk());\n    }, [dispatch]);\n\n    const {\n        user,\n        userResetPasswordRequest,\n        userResetPasswordFailure,\n        userResetPasswordSuccess\n    } = useSelector(store => store.user);\n\n    const resetPasswordCallback = useCallback((e: FormEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const payload: TResetPasswordRequest = {\n            password: newPwd,\n            token: emailCode\n        }\n        dispatch(userResetPasswordThunk(payload));\n    }, [dispatch, emailCode, newPwd]);\n\n    if (user) {\n        return <Redirect to=\"/\" />;\n    }\n\n    if (userResetPasswordSuccess) {\n        return <Redirect to=\"/login\" />;\n    }\n\n    return (\n        <form className={`\n            ${CommonStyles.flexColumn} \n            ${CommonStyles.flexAICenter} \n            ${CommonStyles.flexJCCenter} \n            ${CommonStyles.flexFill}\n        `} onSubmit={resetPasswordCallback}>\n            <span className={`text_type_main-default text_color_primary`}>Восстановление пароля</span>\n            <div className={`mt-6`}>\n                <Input\n                    disabled={userResetPasswordRequest}\n                    value={newPwd}\n                    type={pwdType}\n                    placeholder={'Введите новый пароль'}\n                    onChange={e => setNewPwd(e.target.value)}\n                    icon={'ShowIcon'}\n                    onIconClick={showPassword}\n                />\n            </div>\n            <div className={`mt-6`}>\n                <Input\n                    disabled={userResetPasswordRequest}\n                    value={emailCode}\n                    type={'text'}\n                    placeholder={'Введите код из письма'}\n                    onChange={e => setEmailCode(e.target.value)}\n                />\n            </div>\n            {userResetPasswordFailure && <span className='text_type_main-small text_color_error mt-6'>Ошибка смены пароля</span>}\n            <div className={`mt-6`}>\n                <Button htmlType=\"submit\" disabled={userResetPasswordRequest}>Восстановить</Button>\n            </div>\n            <div className={`mt-20`}>\n                <span className={`text_type_main-default text_color_inactive`}>Вспомнили пароль? </span>\n                <Link to={'/login'} className={`text_type_main-default text_color_accent ${CommonStyles.textDecorationNone}`}>Войти</Link>\n            </div>\n        </form>\n    );\n}\n","import {Redirect, Route, RouteProps, useLocation} from \"react-router-dom\";\nimport React, {FC} from \"react\";\nimport {useSelector} from \"../../redux/hooks\";\n\nexport const ProtectedRoute:FC<RouteProps & {children?: React.ReactNode}> = ({ ...props }) => {\n    const location = useLocation();\n\n    const { user } = useSelector(store => store.user);\n\n    if (user) {\n        return <Route {...props}/>;\n    } else {\n        return <Redirect to={{\n            pathname: '/login',\n            state: { from: location.pathname }\n        }} />;\n    }\n}\n","import {Button, Input} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport React, {FC, FormEvent, useCallback, useEffect, useRef, useState} from \"react\";\nimport {useDispatch, useSelector} from \"../../../redux/hooks\";\nimport {TUserUpdateRequest} from \"../../../redux/types/user\";\nimport {userUpdateThunk} from \"../../../redux/actions/user\";\n\ninterface IExtRef extends React.RefObject<any>{\n    originalValue: string\n}\n\nexport const ProfileProfilePage: FC = () => {\n    const dispatch = useDispatch();\n    const {\n        user\n    } = useSelector(store => store.user);\n\n    const originalValues = {\n        name: user?.name || \"\",\n        email: user?.email || \"\",\n        pwd: \"\",\n    }\n\n    const userNameRef = useRef<HTMLInputElement>(null) as IExtRef;\n    const [userName, setUserName] = useState<string>(user?.name || \"\");\n    const [userNameEdit, setUserNameEdit] = useState<boolean>(false);\n\n    const userEmailRef = useRef<HTMLInputElement>(null) as IExtRef;\n    const [userEmail, setUserEmail] = useState<string>(user?.email || \"\");\n    const [userEmailEdit, setUserEmailEdit] = useState<boolean>(false);\n\n    const userPwdRef = useRef<HTMLInputElement>(null) as IExtRef;\n    const [userPwd, setUserPwd] = useState<string>('');\n    const [userPwdEdit, setUserPwdEdit] = useState<boolean>(false);\n\n    const [canUpdate, setCanUpdate] = useState<boolean>(false);\n\n    useEffect(() => {\n        if (\n            userName !== originalValues.name ||\n            userEmail !== originalValues.email ||\n            userPwd !== originalValues.pwd\n        ) {\n            setCanUpdate(true);\n        } else setCanUpdate(false);\n    }, [userName, userEmail, userPwd, originalValues.name, originalValues.email, originalValues.pwd])\n\n    const toggleEditField = (originalValue: string, ref: IExtRef, value: boolean, setter: Function) => {\n        setter(!value);\n        if (!value) setTimeout(() => ref.current.focus());\n        else if (originalValue !== ref.current.value) {\n            setCanUpdate(true);\n        }\n    }\n\n    const saveUser = useCallback((e: FormEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const payload: TUserUpdateRequest = {};\n        if (userPwd) payload.password = userPwd;\n        if (userName !== user?.name) payload.name = userName;\n        if (userEmail !== user?.email) payload.email = userEmail;\n        dispatch(userUpdateThunk(payload));\n        setCanUpdate(false);\n        setUserNameEdit(false);\n        setUserEmailEdit(false);\n        setUserPwdEdit(false);\n    }, [userPwd, userName, user?.name, user?.email, userEmail, dispatch])\n\n    const cancelSave = useCallback(() => {\n        setUserName(user?.name || \"\");\n        setUserNameEdit(false);\n\n        setUserEmail(user?.email || \"\");\n        setUserEmailEdit(false);\n\n        setUserPwd('');\n        setUserPwdEdit(false);\n\n        setCanUpdate(false);\n    }, [user?.email, user?.name]);\n\n    return (\n        <form onSubmit={saveUser}>\n            <div>\n                <Input\n                    name=\"name\"\n                    value={userName}\n                    placeholder=\"Имя\"\n                    ref={userNameRef}\n                    disabled={!userNameEdit}\n                    onChange={e => setUserName(e.target.value)}\n                    icon={userNameEdit ? \"CheckMarkIcon\" : \"EditIcon\"}\n                    onIconClick={toggleEditField.bind(this, originalValues.name, userNameRef, userNameEdit, setUserNameEdit)}\n                />\n            </div>\n            <div className={`pt-6`}>\n                <Input\n                    name=\"email\"\n                    value={userEmail}\n                    placeholder=\"Логин\"\n                    ref={userEmailRef}\n                    disabled={!userEmailEdit}\n                    onChange={e => setUserEmail(e.target.value)}\n                    icon={userEmailEdit ? \"CheckMarkIcon\" : \"EditIcon\"}\n                    onIconClick={toggleEditField.bind(this, originalValues.email, userEmailRef, userEmailEdit, setUserEmailEdit)}\n                />\n            </div>\n            <div className={`pt-6`}>\n                <Input\n                    name=\"password\"\n                    type=\"password\"\n                    value={userPwd}\n                    placeholder=\"Пароль\"\n                    ref={userPwdRef}\n                    disabled={!userPwdEdit}\n                    onChange={e => setUserPwd(e.target.value)}\n                    icon={userPwdEdit ? \"CheckMarkIcon\" : \"EditIcon\"}\n                    onIconClick={toggleEditField.bind(this, originalValues.pwd, userPwdRef, userPwdEdit, setUserPwdEdit)}\n                />\n            </div>\n{/*\n            {updateState.error && <span className='text_type_main-small text_color_error mt-6'>{updateState.error}</span>}\n*/}\n            <div className={`pt-6`}>\n                <Button htmlType=\"button\" type=\"secondary\" disabled={!canUpdate} onClick={cancelSave}>Отменить</Button>\n                <Button htmlType=\"submit\" disabled={!canUpdate}>Сохранить</Button>\n            </div>\n        </form>\n    );\n}\n","import React, {FC, useCallback} from \"react\";\nimport commonStyles from '../../styles/common.module.css';\nimport styles from './feed-order.module.css';\nimport Moment from \"react-moment\";\nimport 'moment/locale/ru';\nimport {CurrencyIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport {useHistory, useLocation} from \"react-router-dom\";\nimport {useSelector} from \"../../redux/hooks\";\nimport {TFeedOrder} from \"../../redux/types/feed\";\n\nexport const FeedOrder: FC<{ feedOrder: TFeedOrder }> = ({ feedOrder }) => {\n    const { rows } = useSelector(store => store.ingredients)\n    const ingredients = rows.filter(item => feedOrder.ingredients.indexOf(item._id) >= 0);\n    const totalPrice = React.useMemo(() => ingredients.reduce((acc, item) => acc + item.price, 0), [ingredients]);\n    const imgs = React.useMemo(() => ingredients.map(item => (<img key={item._id} className={`${styles.ingredientLogo}`} src={item.image_mobile}  alt={\"\"}/>)), [ingredients]);\n\n    const history = useHistory();\n    const location = useLocation();\n    const goToOrder = useCallback(() => {\n        history.replace({\n            pathname: `${location.pathname}/${feedOrder.number}`,\n            state: { background: location }\n        });\n    }, [feedOrder.number, history, location])\n    return (\n        <div onClick={goToOrder} className={`\n        p-5 m-1\n        ${commonStyles.flexColumn} \n        ${commonStyles.cursorPointer} \n        ${commonStyles.panelColor} \n        ${styles.contentContainer} \n        ${commonStyles.borderRadius24}\n        `}>\n            <div className={`${commonStyles.flexRow} ${commonStyles.flexJCBetween} ${commonStyles.flexAICenter}`}>\n                <span className='text text_type_digits-default'>#{feedOrder.number}</span>\n                <span className=\"text text_type_main-default text_color_inactive\">\n                    <Moment locale=\"ru\" calendar>{feedOrder.createdAt}</Moment>\n                </span>\n            </div>\n            <span className=\"mt-3 text text_type_main-default\">{feedOrder.name}</span>\n            <div className={`mt-3 ${commonStyles.flexRow} ${commonStyles.flexJCBetween} ${commonStyles.flexAICenter}`}>\n                <div className={`${commonStyles.flexRowReverse}`}>\n                    { imgs }\n                </div>\n                <div className={`${commonStyles.flexRow} ${commonStyles.flexAICenter}`}>\n                    <span>{totalPrice}</span>\n                    <div className={`ml-1`}>\n                        <CurrencyIcon type='primary'/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, {FC} from \"react\";\nimport styles from \"./ingredient-list-item.module.css\"\nimport commonStyles from '../../../styles/common.module.css';\nimport {CurrencyIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport {TIngredient} from \"../../../redux/types/ingredients\";\n\n\nexport const IngredientListItem: FC<{ingredient: TIngredient}> = ({ingredient}) => {\n    return (\n        <li className={`mt-2 ${commonStyles.wFull} ${commonStyles.flexRow} ${commonStyles.flexAICenter} ${commonStyles.flexJCLeft}`}>\n            <img className={`${styles.ingredientLogo}`} src={ingredient.image_mobile} alt={\"\"}/>\n            <span className={`text text_type_main-default ml-2 ${commonStyles.flexFill}`}>{ingredient.name}</span>\n            <span className={`text text_type_digits-default`}>1x{ingredient.price}</span>\n            <div className={`ml-2`}>\n                <CurrencyIcon type='primary'/>\n            </div>\n        </li>\n    )\n}\n","import {FC, useMemo} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport commonStyles from \"../../styles/common.module.css\";\nimport styles from \"./feed-order-details.module.css\"\nimport {IngredientListItem} from \"../burger-ingredients/ingredient-list-item/ingredient-list-item\";\nimport {useSelector} from \"../../redux/hooks\";\n\n\nexport const FeedOrderDetails: FC<{storeKey: \"commonFeed\" | \"profileFeed\"}> = ({storeKey}) => {\n    const { id: orderNumber } = useParams<{ id: string }>();\n    const feed = useSelector(store => store.feed[storeKey]);\n    const orderIndex = feed.orders.findIndex(item => item.number === parseInt(orderNumber, 10));\n    const order = feed.orders[orderIndex] || null;\n\n   let statusName = \"\";\n    switch (order?.status) {\n        case \"created\":\n            statusName = \"Создан\";\n            break;\n        case \"pending\":\n            statusName = \"Готовится\";\n            break;\n        case \"done\":\n            statusName = \"Выполнен\";\n            break;\n    }\n\n    const { rows } = useSelector(store => store.ingredients);\n    const ingredients = useMemo(() => rows.filter(item => order?.ingredients.indexOf(item._id) >= 0), [rows, order]);\n    const ingredientsEl = useMemo(() => ingredients.map((item, index) => {\n        return <IngredientListItem key={index} ingredient={item}/>\n    }), [ingredients]);\n    return (\n        <div className={`${commonStyles.flexColumn} ${commonStyles.flexJCCenter} ${commonStyles.flexAICenter}`}>\n            <span className=\"text text_type_digits-default\">#{orderNumber}</span>\n            <span className={`text text_type_main-default mt-5 ${commonStyles.flexItemASStart}`}>{order?.name}</span>\n            <span className={`text text_type_main-default text_color_success mt-1 ${commonStyles.flexItemASStart}`}>{statusName}</span>\n            <span className={`text text_type_main-default mt-5 ${commonStyles.flexItemASStart}`}>Состав:</span>\n            <ul className={`${commonStyles.wFull} ${styles.list} scrollerY`}>\n                {ingredientsEl}\n            </ul>\n        </div>\n    )\n}\n","import {COMMON_FEED_UPDATE, PROFILE_FEED_UPDATE} from \"../consts/feed\";\n\nexport interface ICommonFeedUpdateAction {\n    readonly type: typeof COMMON_FEED_UPDATE;\n    readonly feed: string\n}\nexport const commonFeedUpdate = (feed: string): ICommonFeedUpdateAction => ({\n    type: COMMON_FEED_UPDATE,\n    feed: feed\n});\n\nexport interface IProfileFeedUpdateAction {\n    readonly type: typeof PROFILE_FEED_UPDATE;\n    readonly feed: string\n}\nexport const profileFeedUpdate = (feed: string): IProfileFeedUpdateAction => ({\n    type: PROFILE_FEED_UPDATE,\n    feed: feed\n});\n\nexport type TFeedActions = ICommonFeedUpdateAction | IProfileFeedUpdateAction\n","export const COMMON_FEED_UPDATE: 'COMMON_FEED_UPDATE' = 'COMMON_FEED_UPDATE';\nexport const PROFILE_FEED_UPDATE: 'PROFILE_FEED_UPDATE' = 'PROFILE_FEED_UPDATE';\n","export const WS_CONNECTION_START: 'WS_CONNECTION_START' = 'WS_CONNECTION_START'\nexport const WS_CONNECTION_CLOSE: 'WS_CONNECTION_CLOSE' = 'WS_CONNECTION_CLOSE'\nexport const WS_CONNECTION_RECONNECT: 'WS_CONNECTION_RECONNECT' = 'WS_CONNECTION_RECONNECT'\n\nexport const WS_CONNECTION_SUCCESS: 'WS_CONNECTION_SUCCESS' = 'WS_CONNECTION_SUCCESS'\nexport const WS_CONNECTION_ERROR: 'WS_CONNECTION_ERROR' = 'WS_CONNECTION_ERROR'\nexport const WS_CONNECTION_CLOSED: 'WS_CONNECTION_CLOSED' = 'WS_CONNECTION_CLOSED'\n","import {\n    WS_CONNECTION_CLOSE,\n    WS_CONNECTION_CLOSED,\n    WS_CONNECTION_ERROR, WS_CONNECTION_RECONNECT,\n    WS_CONNECTION_START,\n    WS_CONNECTION_SUCCESS,\n} from \"../consts/socket\";\nimport {TWSConnect, TWSEventsPayload} from \"../types/socket\";\n\ninterface IWSConnectionStartAction {\n    readonly type: typeof WS_CONNECTION_START;\n    readonly payload: TWSConnect\n}\nexport const wsConnectionStart = (payload: TWSConnect): IWSConnectionStartAction => ({\n    type: WS_CONNECTION_START,\n    payload: payload\n});\n\ninterface IWSConnectionCloseAction {\n    readonly type: typeof WS_CONNECTION_CLOSE;\n    readonly payload: { url: string }\n}\nexport const wsConnectionClose = (payload: { url: string }): IWSConnectionCloseAction => ({\n    type: WS_CONNECTION_CLOSE,\n    payload: payload\n});\n\ninterface IWSConnectionReconnectAction {\n    readonly type: typeof WS_CONNECTION_RECONNECT;\n    readonly payload: TWSConnect\n}\nexport const wsConnectionReconnect = (payload: TWSConnect): IWSConnectionReconnectAction => ({\n    type: WS_CONNECTION_RECONNECT,\n    payload: payload\n});\n\nexport interface IWSConnectionSuccessAction {\n    readonly type: typeof WS_CONNECTION_SUCCESS;\n    readonly payload: TWSEventsPayload\n}\nexport const wsConnectionSuccess = (payload: TWSEventsPayload): IWSConnectionSuccessAction => ({\n    type: WS_CONNECTION_SUCCESS,\n    payload: payload\n});\n\nexport interface IWSConnectionErrorAction {\n    readonly type: typeof WS_CONNECTION_ERROR;\n    readonly payload: TWSEventsPayload\n}\nexport const wsConnectionError = (payload: TWSEventsPayload): IWSConnectionErrorAction => ({\n    type: WS_CONNECTION_ERROR,\n    payload: payload\n});\n\nexport interface IWSConnectionClosedAction {\n    readonly type: typeof WS_CONNECTION_CLOSED;\n    readonly payload: TWSEventsPayload\n}\nexport const wsConnectionClosed = (payload: TWSEventsPayload): IWSConnectionClosedAction => ({\n    type: WS_CONNECTION_CLOSED,\n    payload: payload\n});\n\nexport type TWSSocketActions =\n    IWSConnectionStartAction |\n    IWSConnectionSuccessAction |\n    IWSConnectionErrorAction |\n    IWSConnectionClosedAction |\n    IWSConnectionCloseAction |\n    IWSConnectionReconnectAction\n","import React, {FC, useEffect} from \"react\";\nimport commonStyles from \"../../../styles/common.module.css\";\nimport {FeedOrder} from \"../../../components/feed-order/feed-order\";\nimport styles from \"./orders.module.css\"\nimport {useParams} from \"react-router-dom\";\nimport {FeedOrderDetails} from \"../../../components/feed-order-details/feed-order-details\";\nimport {useDispatch, useSelector} from \"../../../redux/hooks\";\nimport {getWsApiUrl} from \"../../../services/http\";\nimport {getCookie} from \"../../../utils/common\";\nimport {TWSConnect} from \"../../../redux/types/socket\";\nimport {profileFeedUpdate} from \"../../../redux/actions/feed\";\nimport {\n    wsConnectionClose,\n    wsConnectionClosed,\n    wsConnectionError,\n    wsConnectionStart,\n    wsConnectionSuccess\n} from \"../../../redux/actions/socket\";\nimport {Spinner} from \"../../../components/spinner/spinner\";\n\n\nexport const ProfileOrdersPage: FC = () => {\n    const dispatch = useDispatch()\n    const profileSocketURL = getWsApiUrl(\"orders\");\n    useEffect(() => {\n        const token = getCookie(\"accessToken\").replace(\"Bearer \", \"\");\n        const payload: TWSConnect = {\n            token: token,\n            url: profileSocketURL,\n            actions: {\n                wsGetMessage: profileFeedUpdate,\n                wsConnectionError: wsConnectionError,\n                wsConnectionClosed: wsConnectionClosed,\n                wsConnectionSuccess: wsConnectionSuccess\n            }\n        }\n        dispatch(wsConnectionStart(payload));\n        return () => {\n            dispatch(wsConnectionClose({ url: profileSocketURL }));\n        }\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    const wsConnected = useSelector(store => store.socket[profileSocketURL]?.wsConnected) || false;\n    const [loading, setLoading] = React.useState<boolean>(!wsConnected);\n    useEffect(() => {\n        setLoading(!wsConnected)\n    }, [wsConnected])\n\n    const { id: orderNumber } = useParams<{ id: string }>();\n\n    const { profileFeed } = useSelector(store => store.feed);\n\n    const feedItems = React.useMemo(() => {\n        return profileFeed.orders.map((order) =>{\n            return <FeedOrder key={order._id} feedOrder={order} />}\n        )\n    }, [profileFeed]);\n    return (\n        loading\n            ? <Spinner centered={true}/>\n            : orderNumber\n                ? <div className={`\n                    ${commonStyles.wFull}\n                    ${commonStyles.hFull}\n                    ${commonStyles.flexRow}\n                    ${commonStyles.flexJCCenter}\n                    mt-10\n                `}>\n                    <div className={`${styles.ordersDetailsItem}`}><FeedOrderDetails storeKey=\"profileFeed\" /></div>\n                </div>\n                : profileFeed.orders.length === 0\n                    ? <div className={`${commonStyles.flexRow} ${commonStyles.flexJCCenter}`}>Список заказов пуст</div>\n                    : <ul className={`${commonStyles.overflowAuto} ${styles.container} scrollerY`} >{ feedItems }</ul>\n    );\n}\n","import {NavLink, Switch, Route, Redirect, useLocation} from \"react-router-dom\";\nimport styles from \"./profile.module.css\";\nimport commonStyles from \"../../styles/common.module.css\"\nimport {ProfileProfilePage} from \"./profile/profile\";\nimport {ProfileOrdersPage} from \"./orders/orders\";\nimport {useDispatch, useSelector} from \"../../redux/hooks\";\nimport {userLogoutThunk} from \"../../redux/actions/user\";\nimport {setCookie} from \"../../utils/common\";\n\nexport default function ProfilePage() {\n    const dispatch = useDispatch();\n\n    const { userLogoutSuccess } = useSelector(store => store.user);\n\n    const location = useLocation();\n\n    const pathParts = location.pathname.split('/');\n\n    const logout = () => {\n        dispatch(userLogoutThunk());\n    }\n\n    if (userLogoutSuccess) {\n        localStorage.removeItem(\"refreshToken\");\n        setCookie(\"accessToken\", null, { expired: -1 });\n        return <Redirect to=\"/login\"/>;\n    }\n\n    return (\n        <section className={`${commonStyles.flexRow} ${commonStyles.flexJCCenter}`}>\n            <div className={`${styles.content} ${commonStyles.flexRow}`}>\n                {pathParts.length !== 4 && <div className={`mr-15 ${styles.menuContent}`}>\n                    <ul className={styles.profileMenu}>\n                        <li className={`p-2 pl-0`}>\n                            <NavLink exact activeClassName={styles.profileMenuItemActive} to=\"/profile\">\n                                <span className={`text_type_main-medium text_color_inactive`}>\n                                    Профиль\n                                </span>\n                            </NavLink>\n                        </li>\n                        <li className={`p-2 pl-0`}>\n                            <NavLink activeClassName={styles.profileMenuItemActive} to=\"/profile/orders\">\n                                <span className={`text_type_main-medium text_color_inactive`}>\n                                    История заказов\n                                </span>\n                            </NavLink>\n                        </li>\n                        <li onClick={logout} className={`p-2 pl-0 ${commonStyles.cursorPointer}`}>\n                            <span className={`text_type_main-medium text_color_inactive`}>\n                                Выход\n                            </span>\n                        </li>\n                    </ul>\n                </div>}\n                <div className={`${commonStyles.flexFill} pt-6`}>\n                    <Switch>\n                        <Route exact path='/profile' component={ProfileProfilePage} />\n                        <Route exact path='/profile/orders' component={ProfileOrdersPage} />\n                        <Route exact path='/profile/orders/:id' component={ProfileOrdersPage} />\n                    </Switch>\n                </div>\n            </div>\n        </section>\n    );\n}\n","import {FC} from \"react\";\n\nexport const Page404: FC = () => {\n    return (\n        <span>Страница не найдена</span>\n    );\n}\n","import CommonStyles from '../../../styles/common.module.css'\nimport {useParams} from \"react-router-dom\";\nimport {Spinner} from \"../../spinner/spinner\";\nimport commonStyles from \"../../../styles/common.module.css\";\nimport React, {FC} from \"react\";\nimport {useSelector} from \"../../../redux/hooks\";\nimport {TIngredient} from \"../../../redux/types/ingredients\";\n\nexport const IngredientDetails: FC = () => {\n    let ingredient: TIngredient | null = null;\n    const { id: ingredientId } = useParams<{ id: string }>();\n    const { rows: ingredients } = useSelector(store => store.ingredients);\n    const ingredientIndex = ingredients.findIndex(item => item._id === ingredientId);\n\n    if (ingredientIndex >= 0) {\n        ingredient = ingredients[ingredientIndex];\n    }\n\n    let content = <Spinner />;\n    if (ingredient) {\n        content = <div className={`${CommonStyles.flexColumn} ${CommonStyles.flexJCCenter}`}>\n            <span className={`text_type_main-medium ${CommonStyles.textCenter}`}>Детали ингредиента</span>\n            <img alt='' src={ingredient.image}/>\n            <span className={`mt-4 text text_type_main-default ${CommonStyles.textCenter}`}>{ingredient.name}</span>\n            <div className={`mt-8 ${CommonStyles.flexRow} ${CommonStyles.flexJCBetween}`}>\n                <div\n                    className={`text text_type_main-small text_color_inactive ${CommonStyles.flexColumn} ${CommonStyles.flexAICenter}`}>\n                    <span>Калории, ккал</span>\n                    <span className={`mt-2`}>{ingredient.calories}</span>\n                </div>\n                <div\n                    className={`ml-5 text text_type_main-small text_color_inactive ${CommonStyles.flexColumn} ${CommonStyles.flexAICenter}`}>\n                    <span>Белки, г</span>\n                    <span className={`mt-2`}>{ingredient.proteins}</span>\n                </div>\n                <div\n                    className={`ml-5 text text_type_main-small text_color_inactive ${CommonStyles.flexColumn} ${CommonStyles.flexAICenter}`}>\n                    <span>Жиры, г</span>\n                    <span className={`mt-2`}>{ingredient.fat}</span>\n                </div>\n                <div\n                    className={`ml-5 text text_type_main-small text_color_inactive ${CommonStyles.flexColumn} ${CommonStyles.flexAICenter}`}>\n                    <span>Углеводы, г</span>\n                    <span className={`mt-2`}>{ingredient.carbohydrates}</span>\n                </div>\n            </div>\n        </div>;\n    }\n    return (\n        <section className={`${commonStyles.flexRow} ${commonStyles.flexJCCenter} ${commonStyles.page} pb-4`}>\n            {content}\n        </section>\n    );\n}\n","import React, {FC, useEffect} from \"react\";\nimport commonStyles from \"../../styles/common.module.css\";\nimport {FeedOrder} from \"../../components/feed-order/feed-order\";\nimport styles from \"./feed.module.css\"\n\nimport {useParams} from \"react-router-dom\";\nimport {FeedOrderDetails} from \"../../components/feed-order-details/feed-order-details\";\nimport {useDispatch, useSelector} from \"../../redux/hooks\";\nimport {TWSConnect} from \"../../redux/types/socket\";\nimport {getWsApiUrl} from \"../../services/http\";\nimport {commonFeedUpdate} from \"../../redux/actions/feed\";\nimport {\n    wsConnectionClose,\n    wsConnectionClosed,\n    wsConnectionError,\n    wsConnectionStart,\n    wsConnectionSuccess\n} from \"../../redux/actions/socket\";\nimport {Spinner} from \"../../components/spinner/spinner\";\n\nexport const FeedPage: FC = () => {\n    const { id: orderNumber } = useParams<{ id: string }>();\n\n    const { commonFeed } = useSelector(store => store.feed);\n\n    const feedItems = React.useMemo(() => {\n        return commonFeed?.orders.map((order) =>{\n            return <FeedOrder key={order._id} feedOrder={order} />}\n        )\n    }, [commonFeed]);\n\n    const dispatch = useDispatch();\n    const wsURL = getWsApiUrl(\"orders/all\");\n    useEffect(() => {\n        const payload: TWSConnect = {\n            url: wsURL,\n            actions: {\n                wsGetMessage: commonFeedUpdate,\n                wsConnectionError: wsConnectionError,\n                wsConnectionClosed: wsConnectionClosed,\n                wsConnectionSuccess: wsConnectionSuccess\n            }\n        }\n        dispatch(wsConnectionStart(payload));\n        return () => {\n            dispatch(wsConnectionClose({ url: wsURL }));\n        }\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n\n    const wsConnected = useSelector(store => store.socket[wsURL]?.wsConnected) || false;\n    const [loading, setLoading] = React.useState<boolean>(!wsConnected);\n    useEffect(() => {\n        setLoading(!wsConnected)\n    }, [wsConnected])\n\n    const ordersDone = React.useMemo(() => {\n        const doneItems = commonFeed?.orders.filter(item => item.status === \"done\") || [];\n        return doneItems.map(item => (<span key={item._id} className={`text_type_digits-default text_color_success ${styles.rowHeight}`}>{item.number}</span>));\n    }, [commonFeed])\n\n    const ordersPending = React.useMemo(() => {\n        const pendingItems = commonFeed?.orders.filter(item => item.status === \"pending\") || [];\n        return pendingItems.map(item => (<span key={item._id} className={`text_type_digits-default ${styles.rowHeight}`}>{item.number}</span>));\n    }, [commonFeed])\n\n    return (\n        loading\n            ? <Spinner centered={true} />\n            : orderNumber\n                ?\n                <div className={`\n                    ${commonStyles.wFull}\n                    ${commonStyles.hFull}\n                    ${commonStyles.flexRow}\n                    ${commonStyles.flexJCCenter}\n                    mt-10\n                `}>\n                    <div className={`${styles.ordersDetailsItem}`}><FeedOrderDetails storeKey=\"commonFeed\" /></div>\n                </div>\n                : <section className={`${commonStyles.flexRow} ${commonStyles.flexJCCenter} ${commonStyles.page} pb-4`}>\n                    <div className={`${commonStyles.flexRow}`}>\n                        <div className={`${commonStyles.flexColumn} mt-5`}>\n                            <span className=\"text text_type_main-large\">Лента заказов</span>\n                            <ul className={`scrollerY ${commonStyles.flexColumn} ${styles.list} ${commonStyles.overflowXHidden}`}>\n                                { feedItems }\n                            </ul>\n                        </div>\n                        <div className={`${commonStyles.flexColumn} mt-5`}>\n                            <span className=\"text text_type_main-large\">&nbsp;</span>\n                            <div className={`p-3 pl-5 ${commonStyles.flexColumn}`}>\n                                <div className={`${commonStyles.flexRow} ${styles.ordersDetailsContent} ${styles.ordersDetailsQueue}`}>\n                                    <div className={`${commonStyles.flexFill}`}>\n                                        <span className=\"text text_type_main-medium\">Готовы:</span>\n                                        <div className={`${commonStyles.flexColumn} ${commonStyles.flexWrap} ${commonStyles.hFull}`}>{ordersDone}</div>\n                                    </div>\n                                    <div className={`${commonStyles.flexFill}`}>\n                                        <span className=\"text text_type_main-medium\">В работе:</span>\n                                        <div className={`${commonStyles.flexColumn} ${commonStyles.flexWrap} ${commonStyles.hFull}`}>{ordersPending}</div>\n                                    </div>\n                                </div>\n                                <div className={`pt-15 ${commonStyles.flexColumn}`}>\n                                    <span className=\"text text_type_main-medium\">Выполнено за всё время:</span>\n                                    <span className={`text text_type_digits-large ${styles.textShadow}`}>{commonFeed?.total}</span>\n                                </div>\n                                <div className={`pt-15 ${commonStyles.flexColumn}`}>\n                                    <span className=\"text text_type_main-medium\">Выполнено за сегодня:</span>\n                                    <span className={`text text_type_digits-large ${styles.textShadow}`}>{commonFeed?.totalToday}</span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n\n    );\n}\n","import React, {PropsWithChildren, ReactElement} from 'react';\nimport AppHeader from \"../app-header/app-header\";\nimport {BurgerPage} from \"../burger-page/burger-page\";\nimport {BrowserRouter as Router, Route, Switch, useHistory, useLocation} from \"react-router-dom\";\nimport {LoginPage} from \"../../pages/login/login\";\nimport {RegisterPage} from \"../../pages/register/register\";\nimport {ForgotPasswordPage} from \"../../pages/forgot-password/forgot-password\";\nimport {ResetPasswordPage} from \"../../pages/reset-password/reset-password\";\nimport {ProtectedRoute} from \"../protected-route/protected-route\";\nimport ProfilePage from \"../../pages/profile/profile\";\nimport {Page404} from \"../../pages/404/404\";\nimport {IngredientDetails} from \"../burger-ingredients/ingredient-details/ingredient-details\";\nimport {Modal} from \"../modal/modal\";\nimport * as H from 'history';\nimport {FeedPage} from \"../../pages/feed/feed\";\nimport {FeedOrderDetails} from \"../feed-order-details/feed-order-details\";\nimport {useDispatch} from \"../../redux/hooks\";\nimport {getIngredientsThunk} from \"../../redux/actions/ingredients\";\n\ndeclare module 'react' {\n    interface FunctionComponent<P = {}> {\n        (props: PropsWithChildren<P>, context?: any): ReactElement<any, any> | null;\n    }\n}\n\ninterface ILocationState {\n    background: H.Location\n}\n\nexport default function App() {\n    const ModalSwitch = () => {\n        const location = useLocation<ILocationState>();\n        const history = useHistory();\n\n        const background = location.state && location.state.background;\n\n        const handleModalClose = (path: string) => {\n            history.replace(path);\n        };\n\n        const dispatch = useDispatch();\n\n        React.useEffect(() => {\n            dispatch(getIngredientsThunk());\n        },[dispatch]);\n\n        return (\n            <>\n                <AppHeader/>\n                <Switch location={background || location}>\n                    <Route exact path='/' component={BurgerPage}/>\n                    <Route exact path='/feed' component={FeedPage}/>\n                    <Route path='/feed/:id' component={FeedPage}/>\n                    <ProtectedRoute path='/profile' component={ProfilePage}/>\n                    <Route path='/ingredients/:id' component={IngredientDetails}/>\n                    <Route path='/login' component={LoginPage}/>\n                    <Route path='/register' component={RegisterPage}/>\n                    <Route path='/forgot-password' component={ForgotPasswordPage}/>\n                    <Route path='/reset-password' component={ResetPasswordPage}/>\n                    <Route>\n                        <Page404></Page404>\n                    </Route>\n                </Switch>\n                {background && (\n                    <Route\n                        path='/ingredients/:id'\n                        children={\n                            <Modal header={\"\"} onClose={handleModalClose.bind(null, \"/\")}>\n                                <IngredientDetails />\n                            </Modal>\n                        }\n                    />\n                )}\n                {background && (\n                    <Route\n                        path='/feed/:id'\n                        children={\n                            <Modal header={\"\"} onClose={handleModalClose.bind(null, \"/feed\")}>\n                                <FeedOrderDetails storeKey=\"commonFeed\" />\n                            </Modal>\n                        }\n                    />\n                )}\n                {background && (\n                    <Route\n                        path='/profile/orders/:id'\n                        children={\n                            <Modal header={\"\"} onClose={handleModalClose.bind(null, \"/profile/orders\")}>\n                                <FeedOrderDetails storeKey=\"profileFeed\" />\n                            </Modal>\n                        }\n                    />\n                )}\n            </>\n        );\n    }\n    return (\n        <Router>\n            <ModalSwitch />\n        </Router>\n    );\n}\n","import {TIngredient} from \"../types/ingredients\";\nimport {TIngredientsActions} from \"../actions/ingredients\";\n\nexport type TIngredientsState = {\n    ingredientsTab: string\n    ingredientsShowDetails: boolean\n\n    rows: TIngredient[]\n    ingredientsRequest: boolean\n    ingredientsFailure: boolean\n}\n\nconst ingredientsInitialState: TIngredientsState = {\n    ingredientsTab: \"bun\",\n    ingredientsShowDetails: false,\n\n    rows: [],\n    ingredientsRequest: false,\n    ingredientsFailure: false,\n}\n\nexport const ingredientsReducer = (state = ingredientsInitialState, action: TIngredientsActions): TIngredientsState => {\n    switch (action.type) {\n        case \"INGREDIENTS_REQUEST\": {\n            return {\n                ...state,\n                ingredientsRequest: true,\n                ingredientsFailure: false,\n            }\n        }\n        case \"INGREDIENTS_SUCCESS\": {\n            return {\n                ...state,\n                rows: action.rows,\n                ingredientsRequest: false,\n            }\n        }\n        case \"INGREDIENTS_FAILURE\": {\n            return {\n                ...state,\n                ingredientsFailure: true,\n                ingredientsRequest: false,\n            }\n        }\n        case \"INGREDIENTS_SET_TAB\":\n            return {\n                ...state,\n                ingredientsTab: action.tab\n            }\n        default: {\n            return state;\n        }\n    }\n};\n","import {TIngredient} from \"../types/ingredients\";\nimport {TConstructorActions} from \"../actions/constructor\";\nimport {v4 as uuidV4} from \"uuid\"\n\nexport type TConstructorState = {\n    cart: TIngredient[]\n    totalPrice: number\n}\n\nconst constructorInitialState: TConstructorState = {\n    cart: [],\n    totalPrice: 0\n}\n\nexport const constructorReducer = (state = constructorInitialState, action: TConstructorActions): TConstructorState => {\n    switch (action.type) {\n        case \"CONSTRUCTOR_ADD\":{\n            const newCart = [...state.cart];\n            if (action.ingredient.type === 'bun') {\n                const bunIndex = newCart.findIndex(ingredient => ingredient.type === 'bun');\n                if (bunIndex >= 0) {\n                    newCart.splice(bunIndex, 1);\n                }\n            }\n            newCart.push({ ...action.ingredient });\n            return {\n                ...state,\n                cart: newCart.map((item) => ({ ...item, uuid: uuidV4() })),\n                totalPrice: newCart.reduce((total, item) => total + item.price, 0)\n            };\n        }\n        case \"CONSTRUCTOR_DEL\": {\n            const newCart = [...state.cart];\n            const deleteItemIndex = newCart.findIndex(item => item.uuid === action.ingredient.uuid);\n            newCart.splice(deleteItemIndex, 1);\n            return {\n                ...state,\n                cart: [ ...newCart ],\n                totalPrice: newCart.reduce((total, item) => total + item.price, 0)\n            };\n        }\n        case \"CONSTRUCTOR_REPLACE\": {\n            const { dragIngredient, dropIngredient } = action.data;\n            let newCart = [ ...state.cart ]\n            const dragIndex = state.cart.findIndex(ingredient => ingredient.uuid === dragIngredient.uuid);\n            newCart.splice(dragIndex, 1);\n            const dropIndex = state.cart.findIndex(ingredient => ingredient.uuid === dropIngredient.uuid);\n            newCart.splice(dropIndex, 0, dragIngredient);\n            return {\n                ...state,\n                cart: [ ...newCart ]\n            };\n        }\n        case \"CONSTRUCTOR_RESET\": {\n            return {\n                ...state,\n                cart: [],\n                totalPrice: 0,\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\n","import {TOrder, TUser} from \"../types/user\";\nimport {TUserActions} from \"../actions/user\";\n\n\nexport type TUserState = {\n    user: TUser | null\n\n    userAuthRequest: boolean\n    userAuthFailure: boolean\n\n    userLoginRequest: boolean\n    userLoginFailure: boolean\n\n    userForgotPasswordRequest: boolean\n    userForgotPasswordSuccess: boolean\n    userForgotPasswordFailure: boolean\n\n    userResetPasswordRequest: boolean\n    userResetPasswordSuccess: boolean\n    userResetPasswordFailure: boolean\n\n    userLogoutRequest: boolean\n    userLogoutSuccess: boolean\n    userLogoutFailure: boolean\n\n    userUpdateRequest: boolean,\n    userUpdateFailure: boolean,\n\n    userRegisterRequest: boolean,\n    userRegisterFailure: boolean,\n\n    order: TOrder | null\n    userCreateOrderRequest: boolean\n    userCreateOrderFailure: boolean\n}\n\nconst userInitialState: TUserState = {\n    user: null,\n\n    userAuthRequest: false,\n    userAuthFailure: false,\n\n    userLoginRequest: false,\n    userLoginFailure: false,\n\n    userForgotPasswordRequest: false,\n    userForgotPasswordSuccess: false,\n    userForgotPasswordFailure: false,\n\n    userResetPasswordRequest: false,\n    userResetPasswordSuccess: false,\n    userResetPasswordFailure: false,\n\n    userLogoutRequest: false,\n    userLogoutSuccess: false,\n    userLogoutFailure: false,\n\n    userUpdateRequest: false,\n    userUpdateFailure: false,\n\n    userRegisterRequest: false,\n    userRegisterFailure: false,\n\n    order: null,\n    userCreateOrderRequest: false,\n    userCreateOrderFailure: false,\n}\n\nexport const userReducer = (state = userInitialState, action: TUserActions): TUserState => {\n    switch (action.type) {\n        case \"LOGIN_USER_REQUEST\": {\n            return {\n                ...state,\n                user: null,\n                userLoginRequest: true,\n                userLoginFailure: false,\n            }\n        }\n        case \"LOGIN_USER_SUCCESS\": {\n            return {\n                ...state,\n                user: { ...action.user },\n                userLoginRequest: false,\n                userLogoutSuccess: false,\n            }\n        }\n        case \"LOGIN_USER_FAILURE\":{\n            return {\n                ...state,\n                userLoginFailure: true,\n                userLoginRequest: false,\n            }\n        }\n        case \"USER_CREATE_ORDER_REQUEST\": {\n            return {\n                ...state,\n                order: null,\n                userCreateOrderRequest: true,\n                userCreateOrderFailure: false,\n            }\n        }\n        case \"USER_CREATE_ORDER_SUCCESS\": {\n            return {\n                ...state,\n                order: action.order,\n                userCreateOrderRequest: false,\n                userCreateOrderFailure: false,\n            }\n        }\n        case \"USER_CREATE_ORDER_FAILURE\":{\n            return {\n                ...state,\n                userCreateOrderFailure: true,\n                userCreateOrderRequest: false,\n            }\n        }\n        case \"AUTH_USER_REQUEST\": {\n            return {\n                ...state,\n                userAuthRequest: true,\n                userAuthFailure: false,\n            }\n        }\n        case \"AUTH_USER_SUCCESS\": {\n            return {\n                ...state,\n                user: action.user,\n                userAuthRequest: false,\n            }\n        }\n        case \"AUTH_USER_FAILURE\": {\n            return {\n                ...state,\n                userAuthFailure: true,\n                userAuthRequest: false,\n            }\n        }\n        case \"FORGOT_PASSWORD_REQUEST\": {\n            return {\n                ...state,\n                userForgotPasswordRequest: true,\n                userForgotPasswordSuccess: false,\n                userForgotPasswordFailure: false,\n            }\n        }\n        case \"FORGOT_PASSWORD_SUCCESS\": {\n            return {\n                ...state,\n                userForgotPasswordSuccess: true,\n                userForgotPasswordRequest: false,\n            }\n        }\n        case \"FORGOT_PASSWORD_FAILURE\": {\n            return {\n                ...state,\n                userForgotPasswordFailure: true,\n                userForgotPasswordRequest: false,\n            }\n        }\n        case \"RESET_PASSWORD_REQUEST\": {\n            return {\n                ...state,\n                userResetPasswordRequest: true,\n                userResetPasswordFailure: false,\n                userResetPasswordSuccess: false,\n            }\n        }\n        case \"RESET_PASSWORD_SUCCESS\": {\n            return {\n                ...state,\n                userResetPasswordSuccess: true,\n                userResetPasswordRequest: false\n            }\n        }\n        case \"RESET_PASSWORD_FAILURE\": {\n            return {\n                ...state,\n                userResetPasswordFailure: true,\n                userResetPasswordRequest: false,\n            }\n        }\n        case \"LOGOUT_USER_REQUEST\": {\n            return {\n                ...state,\n                userLogoutRequest: true,\n                userLogoutSuccess: false,\n                userLogoutFailure: false,\n            }\n        }\n        case \"LOGOUT_USER_SUCCESS\": {\n            return {\n                ...state,\n                userLogoutSuccess: true,\n                userLogoutRequest: false,\n            }\n        }\n        case \"LOGOUT_USER_FAILURE\": {\n            return {\n                ...state,\n                userLogoutFailure: true,\n                userLogoutRequest: false,\n            }\n        }\n        case \"UPDATE_USER_REQUEST\": {\n            return {\n                ...state,\n                userUpdateRequest: true,\n                userUpdateFailure: false,\n            }\n        }\n        case \"UPDATE_USER_SUCCESS\": {\n            return {\n                ...state,\n                user: action.user,\n                userUpdateRequest: false,\n            }\n        }\n        case \"UPDATE_USER_FAILURE\":\n            return {\n                ...state,\n                userUpdateFailure: true,\n                userUpdateRequest: false,\n            }\n        case \"REGISTER_USER_REQUEST\": {\n            return {\n                ...state,\n                userRegisterRequest: true,\n                userRegisterFailure: false\n            }\n        }\n        case \"REGISTER_USER_SUCCESS\": {\n            return {\n                ...state,\n                user: action.user,\n                userRegisterRequest: false\n            }\n        }\n        case \"REGISTER_USER_FAILURE\": {\n            return {\n                ...state,\n                userRegisterFailure: true,\n                userRegisterRequest: false\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n}\n","import {TWSSocketActions} from \"../actions/socket\";\n\ntype TSocketState = {\n    wsConnected: boolean;\n    messages: string[];\n    error?: Event;\n}\n\nexport type TSocketsState = {\n    [url: string]: TSocketState\n}\n\nconst socketInitialState: TSocketsState = { }\n\nexport const socketReducer = (state = socketInitialState, action: TWSSocketActions): TSocketsState => {\n    switch (action.type) {\n        case \"WS_CONNECTION_SUCCESS\": {\n            const { url } = action.payload;\n            return {\n                [url]: {\n                    ...state[url],\n                    wsConnected: true,\n                }\n            }\n        }\n        case \"WS_CONNECTION_ERROR\": {\n            const { url, event } = action.payload;\n            return {\n                [url]: {\n                    ...state[url],\n                    wsConnected: false,\n                    error: event\n                }\n            }\n        }\n        case \"WS_CONNECTION_CLOSED\": {\n            const { url } = action.payload;\n            return {\n                [url]: {\n                    ...state[url],\n                    wsConnected: false,\n                    error: undefined\n                }\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n}\n","import {TFeed} from \"../types/feed\";\nimport {TFeedActions} from \"../actions/feed\";\n\nexport type TFeedState = {\n    commonFeed: TFeed;\n    profileFeed: TFeed;\n}\n\nconst feedInitialState: TFeedState = {\n    commonFeed: {\n        orders: [],\n        total: 0,\n        totalToday: 0,\n    },\n    profileFeed: {\n        orders: [],\n        total: 0,\n        totalToday: 0,\n    }\n}\n\nexport const feedReducer = (state = feedInitialState, action: TFeedActions): TFeedState => {\n    switch (action.type) {\n        case \"COMMON_FEED_UPDATE\": {\n            return {\n                ...state,\n                commonFeed: JSON.parse(action.feed)\n            }\n        }\n        case \"PROFILE_FEED_UPDATE\": {\n            return {\n                ...state,\n                profileFeed: JSON.parse(action.feed)\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n}\n","import {ingredientsReducer} from \"./ingredients\";\nimport {combineReducers} from \"redux\";\nimport {constructorReducer} from \"./constructor\";\nimport {userReducer} from \"./user\";\nimport {socketReducer} from \"./socket\";\nimport {feedReducer} from \"./feed\";\n\nexport const rootReducer = combineReducers({\n    ingredients: ingredientsReducer,\n    burgerConstructor: constructorReducer,\n    user: userReducer,\n    socket: socketReducer,\n    feed: feedReducer\n})\n","import {rootReducer} from \"./reducers\";\nimport thunk from 'redux-thunk';\nimport {socketMiddleware} from \"./middleware/socketMiddleware\";\nimport {configureStore} from \"@reduxjs/toolkit\";\n\n/*export const store = configureStore(\n    rootReducer,\n    compose(\n        applyMiddleware(thunk),\n        applyMiddleware(socketMiddleware())\n    )\n);*/\n\nexport const store = configureStore({\n    reducer: rootReducer,\n    middleware: getDefaultMiddleware =>\n        getDefaultMiddleware({\n            serializableCheck: false,\n        }).concat(thunk, socketMiddleware())\n});\n","import type {Middleware, MiddlewareAPI} from 'redux';\n\nimport type {AppActions, AppDispatch, RootState} from '../types';\nimport {TWSConnect, TWSEventsPayload} from \"../types/socket\";\nimport {WS_CONNECTION_CLOSE, WS_CONNECTION_START} from \"../consts/socket\";\nimport {wsConnectionStart} from \"../actions/socket\";\n\nexport const socketMiddleware = (): Middleware => {\n    return ((store: MiddlewareAPI<AppDispatch, RootState>) => {\n        const sockets: { [url: string]: { socket: WebSocket, connectData: TWSConnect } } = {};\n        return next => (action: AppActions) => {\n            const { dispatch } = store;\n\n            const { type } = action;\n            if (type === WS_CONNECTION_START) {\n                const { payload } = action;\n                const { url, actions, token } = payload;\n                if (url && actions) {\n                    if (sockets[url] && sockets[url].socket.readyState === WebSocket.OPEN) {\n                        sockets[url].socket.close();\n                    }\n                    sockets[url] = {\n                        socket: new WebSocket(token ? `${url}?token=${token}` : url),\n                        connectData: payload\n                    };\n                    sockets[url].socket.onopen = event => {\n                        const payload: TWSEventsPayload = {\n                            url: url,\n                            event: event\n                        }\n                        dispatch(actions.wsConnectionSuccess(payload));\n                    };\n                    sockets[url].socket.onerror = event => {\n                        const payload: TWSEventsPayload = {\n                            url: url,\n                            event: event\n                        }\n                        dispatch(actions.wsConnectionError(payload));\n                        setTimeout(() => {\n                            dispatch(wsConnectionStart(sockets[url].connectData));\n                        }, 1000);\n                    };\n                    sockets[url].socket.onmessage = event => {\n                        const { data } = event;\n                        dispatch(actions.wsGetMessage(data));\n                    };\n                    sockets[url].socket.onclose = event => {\n                        const payload: TWSEventsPayload = {\n                            url: url,\n                            event: event\n                        }\n                        dispatch(actions.wsConnectionClosed(payload));\n                    };\n                }\n            } else if (type === WS_CONNECTION_CLOSE) {\n                const { payload: { url } } = action;\n                if (url) {\n                    sockets[url].socket.close();\n                }\n            }\n            next(action);\n        };\n    }) as Middleware;\n};\n","import React from 'react';\n//import ReactDOM from 'react-dom/client';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\nimport App from \"./components/app/app\";\nimport {store} from \"./redux/store\";\nimport ReactDOM from \"react-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexRow\":\"common_flexRow__392yC\",\"flexRowReverse\":\"common_flexRowReverse__LZAo4\",\"flexColumn\":\"common_flexColumn__38Buv\",\"flexWrap\":\"common_flexWrap__Mfxw4\",\"flexAICenter\":\"common_flexAICenter__2Yhac\",\"flexJCCenter\":\"common_flexJCCenter__335IT\",\"flexJCRight\":\"common_flexJCRight__2lsDR\",\"flexJCLeft\":\"common_flexJCLeft__1INHr\",\"flexJCAround\":\"common_flexJCAround__1dy1T\",\"flexJCBetween\":\"common_flexJCBetween__2my2a\",\"flexFill\":\"common_flexFill__17C5p\",\"flexItemASCenter\":\"common_flexItemASCenter__1CIaJ\",\"flexItemASStart\":\"common_flexItemASStart__14m0K\",\"panelColor\":\"common_panelColor__2Opbr\",\"icon36\":\"common_icon36__166Fm\",\"page\":\"common_page__aqRej\",\"hFull\":\"common_hFull__UTCTs\",\"wFull\":\"common_wFull__2uGFQ\",\"button\":\"common_button__2M6of\",\"cursorPointer\":\"common_cursorPointer__15oj-\",\"textCenter\":\"common_textCenter__14YWI\",\"textDecorationNone\":\"common_textDecorationNone__hhiTe\",\"borderRadius24\":\"common_borderRadius24__3x25g\",\"overflowAuto\":\"common_overflowAuto__2gHSl\",\"overflowXHidden\":\"common_overflowXHidden__1dNVB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"feed_list__QEA8z\",\"ordersDetailsContent\":\"feed_ordersDetailsContent__j-ot5\",\"ordersDetailsQueue\":\"feed_ordersDetailsQueue__34Jfa\",\"ordersDetailsItem\":\"feed_ordersDetailsItem__lE0Jb\",\"fontSmaller\":\"feed_fontSmaller__1DLtP\",\"textShadow\":\"feed_textShadow__3omA2\",\"rowHeight\":\"feed_rowHeight__3M3QZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"burger-constructor-item_item__1p-7m\",\"smallImage\":\"burger-constructor-item_smallImage__1Zmt7\",\"canDragUp\":\"burger-constructor-item_canDragUp__1F8fs\",\"canDragDown\":\"burger-constructor-item_canDragDown__1UusS\",\"dragPointer\":\"burger-constructor-item_dragPointer__3SAoV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileMenu\":\"profile_profileMenu__278sJ\",\"profileMenuItemActive\":\"profile_profileMenuItemActive__3FYXR\",\"content\":\"profile_content__1AefR\",\"menuContent\":\"profile_menuContent__TTGKB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"burger-ingredients-item_item__1kZOF\",\"price\":\"burger-ingredients-item_price__1jUl6\",\"name\":\"burger-ingredients-item_name__2EPvq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconButton\":\"icon-button_iconButton__3s-UF\",\"active\":\"icon-button_active__1jbQL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemTop\":\"burger-constructor-bun-item_itemTop__2aTI0\",\"itemBottom\":\"burger-constructor-bun-item_itemBottom__2kiSm\",\"smallImage\":\"burger-constructor-bun-item_smallImage__3Q6Y-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"burger-construtor_content__371Hs\",\"list\":\"burger-construtor_list__1blPe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"spinner_spinner__3RSk8\",\"spin\":\"spinner_spin__GHJu3\",\"centered\":\"spinner_centered__17ZOR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentContainer\":\"feed-order_contentContainer__3lMJs\",\"ingredientLogo\":\"feed-order_ingredientLogo__3ePU1\",\"list\":\"feed-order_list__3EAVs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"orders_container__3pTuT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoCentering\":\"app-header_logoCentering__3sjES\",\"flexHCenter\":\"app-header_flexHCenter__3tbCX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"burger-ingredients_content__1Jfst\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__2cNrF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalOverlay\":\"modal-overlay_modalOverlay__2oMJ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"feed-order-details_list__1rylg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientLogo\":\"ingredient-list-item_ingredientLogo__tvzql\"};"],"sourceRoot":""}